
Experiment-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800200  0000112a  000011be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000112a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800242  00800242  00001200  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001200  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000125c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001823  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e86  00000000  00000000  00002baf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a03  00000000  00000000  00003a35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00004438  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f1  00000000  00000000  00004638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009d2  00000000  00000000  00004e29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000057fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c0       	rjmp	.+484    	; 0x1e6 <__ctors_end>
       2:	00 00       	nop
       4:	0f c1       	rjmp	.+542    	; 0x224 <__bad_interrupt>
       6:	00 00       	nop
       8:	0d c1       	rjmp	.+538    	; 0x224 <__bad_interrupt>
       a:	00 00       	nop
       c:	0b c1       	rjmp	.+534    	; 0x224 <__bad_interrupt>
       e:	00 00       	nop
      10:	09 c1       	rjmp	.+530    	; 0x224 <__bad_interrupt>
      12:	00 00       	nop
      14:	07 c1       	rjmp	.+526    	; 0x224 <__bad_interrupt>
      16:	00 00       	nop
      18:	05 c1       	rjmp	.+522    	; 0x224 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	03 c1       	rjmp	.+518    	; 0x224 <__bad_interrupt>
      1e:	00 00       	nop
      20:	01 c1       	rjmp	.+514    	; 0x224 <__bad_interrupt>
      22:	00 00       	nop
      24:	ff c0       	rjmp	.+510    	; 0x224 <__bad_interrupt>
      26:	00 00       	nop
      28:	fd c0       	rjmp	.+506    	; 0x224 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	fb c0       	rjmp	.+502    	; 0x224 <__bad_interrupt>
      2e:	00 00       	nop
      30:	f9 c0       	rjmp	.+498    	; 0x224 <__bad_interrupt>
      32:	00 00       	nop
      34:	f7 c0       	rjmp	.+494    	; 0x224 <__bad_interrupt>
      36:	00 00       	nop
      38:	f5 c0       	rjmp	.+490    	; 0x224 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f3 c0       	rjmp	.+486    	; 0x224 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f1 c0       	rjmp	.+482    	; 0x224 <__bad_interrupt>
      42:	00 00       	nop
      44:	ef c0       	rjmp	.+478    	; 0x224 <__bad_interrupt>
      46:	00 00       	nop
      48:	ed c0       	rjmp	.+474    	; 0x224 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	eb c0       	rjmp	.+470    	; 0x224 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e9 c0       	rjmp	.+466    	; 0x224 <__bad_interrupt>
      52:	00 00       	nop
      54:	e7 c0       	rjmp	.+462    	; 0x224 <__bad_interrupt>
      56:	00 00       	nop
      58:	e5 c0       	rjmp	.+458    	; 0x224 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e3 c0       	rjmp	.+454    	; 0x224 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e1 c0       	rjmp	.+450    	; 0x224 <__bad_interrupt>
      62:	00 00       	nop
      64:	df c0       	rjmp	.+446    	; 0x224 <__bad_interrupt>
      66:	00 00       	nop
      68:	dd c0       	rjmp	.+442    	; 0x224 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	db c0       	rjmp	.+438    	; 0x224 <__bad_interrupt>
      6e:	00 00       	nop
      70:	d9 c0       	rjmp	.+434    	; 0x224 <__bad_interrupt>
      72:	00 00       	nop
      74:	15 c1       	rjmp	.+554    	; 0x2a0 <__vector_29>
      76:	00 00       	nop
      78:	d5 c0       	rjmp	.+426    	; 0x224 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d3 c0       	rjmp	.+422    	; 0x224 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d1 c0       	rjmp	.+418    	; 0x224 <__bad_interrupt>
      82:	00 00       	nop
      84:	cf c0       	rjmp	.+414    	; 0x224 <__bad_interrupt>
      86:	00 00       	nop
      88:	cd c0       	rjmp	.+410    	; 0x224 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	cb c0       	rjmp	.+406    	; 0x224 <__bad_interrupt>
      8e:	00 00       	nop
      90:	c9 c0       	rjmp	.+402    	; 0x224 <__bad_interrupt>
      92:	00 00       	nop
      94:	c7 c0       	rjmp	.+398    	; 0x224 <__bad_interrupt>
      96:	00 00       	nop
      98:	c5 c0       	rjmp	.+394    	; 0x224 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c3 c0       	rjmp	.+390    	; 0x224 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	c1 c0       	rjmp	.+386    	; 0x224 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bf c0       	rjmp	.+382    	; 0x224 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	bd c0       	rjmp	.+378    	; 0x224 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	bb c0       	rjmp	.+374    	; 0x224 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b9 c0       	rjmp	.+370    	; 0x224 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b7 c0       	rjmp	.+366    	; 0x224 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b5 c0       	rjmp	.+362    	; 0x224 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b3 c0       	rjmp	.+358    	; 0x224 <__bad_interrupt>
      be:	00 00       	nop
      c0:	b1 c0       	rjmp	.+354    	; 0x224 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	af c0       	rjmp	.+350    	; 0x224 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ad c0       	rjmp	.+346    	; 0x224 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ab c0       	rjmp	.+342    	; 0x224 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a9 c0       	rjmp	.+338    	; 0x224 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a7 c0       	rjmp	.+334    	; 0x224 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a5 c0       	rjmp	.+330    	; 0x224 <__bad_interrupt>
      da:	00 00       	nop
      dc:	a3 c0       	rjmp	.+326    	; 0x224 <__bad_interrupt>
      de:	00 00       	nop
      e0:	a1 c0       	rjmp	.+322    	; 0x224 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf ef       	ldi	r28, 0xFF	; 255
     1ec:	d1 e2       	ldi	r29, 0x21	; 33
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0c bf       	out	0x3c, r16	; 60

000001f6 <__do_copy_data>:
     1f6:	12 e0       	ldi	r17, 0x02	; 2
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b2 e0       	ldi	r27, 0x02	; 2
     1fc:	ea e2       	ldi	r30, 0x2A	; 42
     1fe:	f1 e1       	ldi	r31, 0x11	; 17
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0b bf       	out	0x3b, r16	; 59
     204:	02 c0       	rjmp	.+4      	; 0x20a <__do_copy_data+0x14>
     206:	07 90       	elpm	r0, Z+
     208:	0d 92       	st	X+, r0
     20a:	a2 34       	cpi	r26, 0x42	; 66
     20c:	b1 07       	cpc	r27, r17
     20e:	d9 f7       	brne	.-10     	; 0x206 <__do_copy_data+0x10>

00000210 <__do_clear_bss>:
     210:	22 e0       	ldi	r18, 0x02	; 2
     212:	a2 e4       	ldi	r26, 0x42	; 66
     214:	b2 e0       	ldi	r27, 0x02	; 2
     216:	01 c0       	rjmp	.+2      	; 0x21a <.do_clear_bss_start>

00000218 <.do_clear_bss_loop>:
     218:	1d 92       	st	X+, r1

0000021a <.do_clear_bss_start>:
     21a:	a4 34       	cpi	r26, 0x44	; 68
     21c:	b2 07       	cpc	r27, r18
     21e:	e1 f7       	brne	.-8      	; 0x218 <.do_clear_bss_loop>
     220:	73 d0       	rcall	.+230    	; 0x308 <main>
     222:	81 c7       	rjmp	.+3842   	; 0x1126 <_exit>

00000224 <__bad_interrupt>:
     224:	ed ce       	rjmp	.-550    	; 0x0 <__vectors>

00000226 <sharp_sensor_pin_config>:
	// clear the MUX5 bit for next conversion
	ADCSRB_reg |= (1<<ADIF_bit) ;

	// clear the MUX[4:0] bits for next conversion
	ADMUX_reg = ~( (1<<MUX4_bit) | (1<<MUX3_bit) | (1<<MUX2_bit) | (1<<MUX1_bit) | (1<<MUX0_bit));
	ADCSRB_reg &= ~(1<<MUX5_bit);
     226:	e7 e0       	ldi	r30, 0x07	; 7
     228:	f1 e0       	ldi	r31, 0x01	; 1
     22a:	80 81       	ld	r24, Z
     22c:	8b 7f       	andi	r24, 0xFB	; 251
     22e:	80 83       	st	Z, r24
     230:	e8 e0       	ldi	r30, 0x08	; 8
     232:	f1 e0       	ldi	r31, 0x01	; 1
     234:	80 81       	ld	r24, Z
     236:	8b 7f       	andi	r24, 0xFB	; 251
     238:	80 83       	st	Z, r24
     23a:	08 95       	ret

0000023c <adc_init>:
     23c:	f8 94       	cli
     23e:	ea e7       	ldi	r30, 0x7A	; 122
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8e 68       	ori	r24, 0x8E	; 142
     246:	80 83       	st	Z, r24
     248:	80 81       	ld	r24, Z
     24a:	8e 78       	andi	r24, 0x8E	; 142
     24c:	80 83       	st	Z, r24
     24e:	eb e7       	ldi	r30, 0x7B	; 123
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	80 81       	ld	r24, Z
     254:	80 7b       	andi	r24, 0xB0	; 176
     256:	80 83       	st	Z, r24
     258:	ec e7       	ldi	r30, 0x7C	; 124
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	80 81       	ld	r24, Z
     25e:	80 64       	ori	r24, 0x40	; 64
     260:	80 83       	st	Z, r24
     262:	80 81       	ld	r24, Z
     264:	80 76       	andi	r24, 0x60	; 96
     266:	80 83       	st	Z, r24
     268:	80 81       	ld	r24, Z
     26a:	80 62       	ori	r24, 0x20	; 32
     26c:	80 83       	st	Z, r24
     26e:	80 b7       	in	r24, 0x30	; 48
     270:	80 68       	ori	r24, 0x80	; 128
     272:	80 bf       	out	0x30, r24	; 48
     274:	78 94       	sei
     276:	08 95       	ret

00000278 <select_adc_channel>:
     278:	88 30       	cpi	r24, 0x08	; 8
     27a:	28 f0       	brcs	.+10     	; 0x286 <select_adc_channel+0xe>
     27c:	eb e7       	ldi	r30, 0x7B	; 123
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	90 81       	ld	r25, Z
     282:	98 60       	ori	r25, 0x08	; 8
     284:	90 83       	st	Z, r25
     286:	ec e7       	ldi	r30, 0x7C	; 124
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	90 81       	ld	r25, Z
     28c:	87 70       	andi	r24, 0x07	; 7
     28e:	89 2b       	or	r24, r25
     290:	80 83       	st	Z, r24
     292:	08 95       	ret

00000294 <start_adc>:
     294:	ea e7       	ldi	r30, 0x7A	; 122
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	80 64       	ori	r24, 0x40	; 64
     29c:	80 83       	st	Z, r24
     29e:	08 95       	ret

000002a0 <__vector_29>:
}


// read the ADC data after the conversion is complete
ISR( ADC_vect ){
     2a0:	1f 92       	push	r1
     2a2:	0f 92       	push	r0
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	0f 92       	push	r0
     2a8:	11 24       	eor	r1, r1
     2aa:	2f 93       	push	r18
     2ac:	8f 93       	push	r24
     2ae:	9f 93       	push	r25
	if ((ADCSRA_reg&(1<<ADSC_bit)))
     2b0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
     2b4:	86 ff       	sbrs	r24, 6
     2b6:	13 c0       	rjmp	.+38     	; 0x2de <__vector_29+0x3e>
	{
		adc_10bit_data = (ADCH_reg<<2)|(ADCL_reg>>6);
     2b8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     2bc:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	88 0f       	add	r24, r24
     2c4:	99 1f       	adc	r25, r25
     2c6:	88 0f       	add	r24, r24
     2c8:	99 1f       	adc	r25, r25
     2ca:	22 95       	swap	r18
     2cc:	26 95       	lsr	r18
     2ce:	26 95       	lsr	r18
     2d0:	23 70       	andi	r18, 0x03	; 3
     2d2:	82 2b       	or	r24, r18
     2d4:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <__data_end+0x1>
     2d8:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <__data_end>
     2dc:	0a c0       	rjmp	.+20     	; 0x2f2 <__vector_29+0x52>
	}
	else
	{
		adc_10bit_data = ADCH<<8 | ADCL;
     2de:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     2e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	92 2b       	or	r25, r18
     2ea:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <__data_end+0x1>
     2ee:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <__data_end>
	}

	

}
     2f2:	9f 91       	pop	r25
     2f4:	8f 91       	pop	r24
     2f6:	2f 91       	pop	r18
     2f8:	0f 90       	pop	r0
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	0f 90       	pop	r0
     2fe:	1f 90       	pop	r1
     300:	18 95       	reti

00000302 <convert_analog_channel_data>:
 */
void convert_analog_channel_data( unsigned char sensor_channel_number ){
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function
	
	select_adc_channel( sensor_channel_number );
     302:	ba df       	rcall	.-140    	; 0x278 <select_adc_channel>
	
	start_adc();
     304:	c7 cf       	rjmp	.-114    	; 0x294 <start_adc>
     306:	08 95       	ret

00000308 <main>:
     308:	cf 93       	push	r28
/**
 * @brief      Main Function
 *
 * @details    First Initializes the 2nd Sharp sensor and sends its ADC converted data on LCD and UART
 */
int main(void) {
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62
     310:	c4 56       	subi	r28, 0x64	; 100
     312:	d1 09       	sbc	r29, r1
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	f8 94       	cli
     318:	de bf       	out	0x3e, r29	; 62
     31a:	0f be       	out	0x3f, r0	; 63
     31c:	cd bf       	out	0x3d, r28	; 61
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function except a part of while loop
	
	sharp_sensor_pin_config();			// Initialize the 2nd Sharp sensor
     31e:	83 df       	rcall	.-250    	; 0x226 <sharp_sensor_pin_config>
	
	adc_init();							// Initialize the ADC
     320:	8d df       	rcall	.-230    	; 0x23c <adc_init>
	
	lcd_port_config();					// Initialize the LCD port
     322:	74 d0       	rcall	.+232    	; 0x40c <lcd_port_config>
     324:	e8 d0       	rcall	.+464    	; 0x4f6 <lcd_init>
	lcd_init();							// Initialize the LCD
     326:	8f e5       	ldi	r24, 0x5F	; 95
	
	uart_init(UBRR_VALUE);				// Initialize the UART
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	55 d1       	rcall	.+682    	; 0x5d6 <uart_init>
     32c:	8a e0       	ldi	r24, 0x0A	; 10
	float adc_data_voltage_reading;
	
	// To create string for transmitting 2nd Sharp sensor raw data and corresponding voltage over the UART and LCD
	char tx_raw_adc_data_buffer[25], tx_voltage_buffer[25], lcd_print_raw_adc_data_string[25], lcd_print_voltage_string[25];
	
	convert_analog_channel_data( sharp_sensor_channel );
     32e:	e9 df       	rcall	.-46     	; 0x302 <convert_analog_channel_data>
     330:	0a e7       	ldi	r16, 0x7A	; 122
     332:	10 e0       	ldi	r17, 0x00	; 0
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     334:	4e 01       	movw	r8, r28
     336:	23 e3       	ldi	r18, 0x33	; 51

			adc_data_voltage_reading = (sharp_sensor_data*5)/1024 ;

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     338:	82 0e       	add	r8, r18
     33a:	91 1c       	adc	r9, r1
     33c:	ce 01       	movw	r24, r28
     33e:	01 96       	adiw	r24, 0x01	; 1
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     340:	3c 01       	movw	r6, r24
     342:	5e 01       	movw	r10, r28
     344:	9c e4       	ldi	r25, 0x4C	; 76
			uart_tx_string(tx_raw_adc_data_buffer);
			
			sprintf(lcd_print_voltage_string, "Voltage: %0.2f V", adc_data_voltage_reading);
     346:	a9 0e       	add	r10, r25
     348:	b1 1c       	adc	r11, r1
     34a:	6e 01       	movw	r12, r28
     34c:	ea e1       	ldi	r30, 0x1A	; 26
			lcd_string(2, 1, lcd_print_voltage_string);
			
			sprintf(tx_voltage_buffer, "Voltage: %0.2f V\n", adc_data_voltage_reading);
     34e:	ce 0e       	add	r12, r30
     350:	d1 1c       	adc	r13, r1
     352:	f8 01       	movw	r30, r16
     354:	80 81       	ld	r24, Z
	
	convert_analog_channel_data( sharp_sensor_channel );
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
     356:	86 fd       	sbrc	r24, 6
     358:	fc cf       	rjmp	.-8      	; 0x352 <main+0x4a>
     35a:	e0 90 42 02 	lds	r14, 0x0242	; 0x800242 <__data_end>
		{
			// ------------------------------- //

			sharp_sensor_data = adc_10bit_data ;
     35e:	f0 90 43 02 	lds	r15, 0x0243	; 0x800243 <__data_end+0x1>
     362:	b7 01       	movw	r22, r14
     364:	66 0f       	add	r22, r22

			adc_data_voltage_reading = (sharp_sensor_data*5)/1024 ;
     366:	77 1f       	adc	r23, r23
     368:	66 0f       	add	r22, r22
     36a:	77 1f       	adc	r23, r23
     36c:	6e 0d       	add	r22, r14
     36e:	7f 1d       	adc	r23, r15
     370:	77 23       	and	r23, r23
     372:	14 f4       	brge	.+4      	; 0x378 <main+0x70>
     374:	61 50       	subi	r22, 0x01	; 1
     376:	7c 4f       	sbci	r23, 0xFC	; 252
     378:	67 2f       	mov	r22, r23
     37a:	77 0f       	add	r23, r23
     37c:	77 0b       	sbc	r23, r23
     37e:	65 95       	asr	r22
     380:	65 95       	asr	r22
     382:	07 2e       	mov	r0, r23
     384:	00 0c       	add	r0, r0
     386:	88 0b       	sbc	r24, r24
     388:	99 0b       	sbc	r25, r25
     38a:	53 d1       	rcall	.+678    	; 0x632 <__floatsisf>
     38c:	56 2e       	mov	r5, r22
     38e:	47 2e       	mov	r4, r23
     390:	38 2e       	mov	r3, r24
     392:	29 2e       	mov	r2, r25
     394:	ff 92       	push	r15
     396:	ef 92       	push	r14

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	92 e0       	ldi	r25, 0x02	; 2
     39c:	9f 93       	push	r25
     39e:	8f 93       	push	r24
     3a0:	9f 92       	push	r9
     3a2:	8f 92       	push	r8
     3a4:	34 d6       	rcall	.+3176   	; 0x100e <sprintf>
     3a6:	a4 01       	movw	r20, r8
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
     3a8:	61 e0       	ldi	r22, 0x01	; 1
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	f9 d0       	rcall	.+498    	; 0x5a0 <lcd_string>
     3ae:	ff 92       	push	r15
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
     3b0:	ef 92       	push	r14
     3b2:	8f e0       	ldi	r24, 0x0F	; 15
     3b4:	92 e0       	ldi	r25, 0x02	; 2
     3b6:	9f 93       	push	r25
     3b8:	8f 93       	push	r24
     3ba:	7f 92       	push	r7
     3bc:	6f 92       	push	r6
     3be:	27 d6       	rcall	.+3150   	; 0x100e <sprintf>
     3c0:	c3 01       	movw	r24, r6
			uart_tx_string(tx_raw_adc_data_buffer);
     3c2:	27 d1       	rcall	.+590    	; 0x612 <uart_tx_string>
     3c4:	2f 92       	push	r2
			
			sprintf(lcd_print_voltage_string, "Voltage: %0.2f V", adc_data_voltage_reading);
     3c6:	3f 92       	push	r3
     3c8:	4f 92       	push	r4
     3ca:	5f 92       	push	r5
     3cc:	8f e1       	ldi	r24, 0x1F	; 31
     3ce:	92 e0       	ldi	r25, 0x02	; 2
     3d0:	9f 93       	push	r25
     3d2:	8f 93       	push	r24
     3d4:	bf 92       	push	r11
     3d6:	af 92       	push	r10
     3d8:	1a d6       	rcall	.+3124   	; 0x100e <sprintf>
     3da:	a5 01       	movw	r20, r10
			lcd_string(2, 1, lcd_print_voltage_string);
     3dc:	61 e0       	ldi	r22, 0x01	; 1
     3de:	82 e0       	ldi	r24, 0x02	; 2
     3e0:	df d0       	rcall	.+446    	; 0x5a0 <lcd_string>
     3e2:	2f 92       	push	r2
			
			sprintf(tx_voltage_buffer, "Voltage: %0.2f V\n", adc_data_voltage_reading);
     3e4:	3f 92       	push	r3
     3e6:	4f 92       	push	r4
     3e8:	5f 92       	push	r5
     3ea:	80 e3       	ldi	r24, 0x30	; 48
     3ec:	92 e0       	ldi	r25, 0x02	; 2
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	df 92       	push	r13
     3f4:	cf 92       	push	r12
     3f6:	0b d6       	rcall	.+3094   	; 0x100e <sprintf>
     3f8:	c6 01       	movw	r24, r12
			uart_tx_string(tx_voltage_buffer);
     3fa:	0b d1       	rcall	.+534    	; 0x612 <uart_tx_string>
     3fc:	8a e0       	ldi	r24, 0x0A	; 10
     3fe:	81 df       	rcall	.-254    	; 0x302 <convert_analog_channel_data>
			
			convert_analog_channel_data( sharp_sensor_channel );
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61
     40a:	a3 cf       	rjmp	.-186    	; 0x352 <main+0x4a>

0000040c <lcd_port_config>:
     40c:	87 b1       	in	r24, 0x07	; 7
     40e:	87 60       	ori	r24, 0x07	; 7
     410:	87 b9       	out	0x07, r24	; 7
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
     412:	87 b1       	in	r24, 0x07	; 7
     414:	80 6f       	ori	r24, 0xF0	; 240
     416:	87 b9       	out	0x07, r24	; 7
     418:	88 b1       	in	r24, 0x08	; 8
     41a:	88 7f       	andi	r24, 0xF8	; 248
     41c:	88 b9       	out	0x08, r24	; 8
     41e:	88 b1       	in	r24, 0x08	; 8
     420:	8f 70       	andi	r24, 0x0F	; 15
     422:	88 b9       	out	0x08, r24	; 8
     424:	08 95       	ret

00000426 <lcd_set_4bit>:
     426:	86 e6       	ldi	r24, 0x66	; 102
     428:	9e e0       	ldi	r25, 0x0E	; 14
     42a:	01 97       	sbiw	r24, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <lcd_set_4bit+0x4>
     42e:	00 00       	nop
     430:	40 98       	cbi	0x08, 0	; 8
     432:	41 98       	cbi	0x08, 1	; 8
     434:	80 e3       	ldi	r24, 0x30	; 48
     436:	88 b9       	out	0x08, r24	; 8
     438:	42 9a       	sbi	0x08, 2	; 8
     43a:	ef ef       	ldi	r30, 0xFF	; 255
     43c:	f7 e4       	ldi	r31, 0x47	; 71
     43e:	31 97       	sbiw	r30, 0x01	; 1
     440:	f1 f7       	brne	.-4      	; 0x43e <lcd_set_4bit+0x18>
     442:	00 c0       	rjmp	.+0      	; 0x444 <lcd_set_4bit+0x1e>
     444:	00 00       	nop
     446:	42 98       	cbi	0x08, 2	; 8
     448:	e6 e6       	ldi	r30, 0x66	; 102
     44a:	fe e0       	ldi	r31, 0x0E	; 14
     44c:	31 97       	sbiw	r30, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <lcd_set_4bit+0x26>
     450:	00 00       	nop
     452:	40 98       	cbi	0x08, 0	; 8
     454:	41 98       	cbi	0x08, 1	; 8
     456:	88 b9       	out	0x08, r24	; 8
     458:	42 9a       	sbi	0x08, 2	; 8
     45a:	ef ef       	ldi	r30, 0xFF	; 255
     45c:	f7 e4       	ldi	r31, 0x47	; 71
     45e:	31 97       	sbiw	r30, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_set_4bit+0x38>
     462:	00 c0       	rjmp	.+0      	; 0x464 <lcd_set_4bit+0x3e>
     464:	00 00       	nop
     466:	42 98       	cbi	0x08, 2	; 8
     468:	e6 e6       	ldi	r30, 0x66	; 102
     46a:	fe e0       	ldi	r31, 0x0E	; 14
     46c:	31 97       	sbiw	r30, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <lcd_set_4bit+0x46>
     470:	00 00       	nop
     472:	40 98       	cbi	0x08, 0	; 8
     474:	41 98       	cbi	0x08, 1	; 8
     476:	88 b9       	out	0x08, r24	; 8
     478:	42 9a       	sbi	0x08, 2	; 8
     47a:	8f ef       	ldi	r24, 0xFF	; 255
     47c:	97 e4       	ldi	r25, 0x47	; 71
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	f1 f7       	brne	.-4      	; 0x47e <lcd_set_4bit+0x58>
     482:	00 c0       	rjmp	.+0      	; 0x484 <lcd_set_4bit+0x5e>
     484:	00 00       	nop
     486:	42 98       	cbi	0x08, 2	; 8
     488:	e6 e6       	ldi	r30, 0x66	; 102
     48a:	fe e0       	ldi	r31, 0x0E	; 14
     48c:	31 97       	sbiw	r30, 0x01	; 1
     48e:	f1 f7       	brne	.-4      	; 0x48c <lcd_set_4bit+0x66>
     490:	00 00       	nop
     492:	40 98       	cbi	0x08, 0	; 8
     494:	41 98       	cbi	0x08, 1	; 8
     496:	80 e2       	ldi	r24, 0x20	; 32
     498:	88 b9       	out	0x08, r24	; 8
     49a:	42 9a       	sbi	0x08, 2	; 8
     49c:	8f ef       	ldi	r24, 0xFF	; 255
     49e:	97 e4       	ldi	r25, 0x47	; 71
     4a0:	01 97       	sbiw	r24, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <lcd_set_4bit+0x7a>
     4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <lcd_set_4bit+0x80>
     4a6:	00 00       	nop
     4a8:	42 98       	cbi	0x08, 2	; 8
     4aa:	08 95       	ret

000004ac <lcd_wr_command>:
     4ac:	98 b1       	in	r25, 0x08	; 8
     4ae:	9f 70       	andi	r25, 0x0F	; 15
     4b0:	98 b9       	out	0x08, r25	; 8
     4b2:	98 b1       	in	r25, 0x08	; 8
     4b4:	28 2f       	mov	r18, r24
     4b6:	20 7f       	andi	r18, 0xF0	; 240
     4b8:	92 2b       	or	r25, r18
     4ba:	98 b9       	out	0x08, r25	; 8
     4bc:	40 98       	cbi	0x08, 0	; 8
     4be:	41 98       	cbi	0x08, 1	; 8
     4c0:	42 9a       	sbi	0x08, 2	; 8
     4c2:	ef ef       	ldi	r30, 0xFF	; 255
     4c4:	f7 e4       	ldi	r31, 0x47	; 71
     4c6:	31 97       	sbiw	r30, 0x01	; 1
     4c8:	f1 f7       	brne	.-4      	; 0x4c6 <lcd_wr_command+0x1a>
     4ca:	00 c0       	rjmp	.+0      	; 0x4cc <lcd_wr_command+0x20>
     4cc:	00 00       	nop
     4ce:	42 98       	cbi	0x08, 2	; 8
     4d0:	98 b1       	in	r25, 0x08	; 8
     4d2:	9f 70       	andi	r25, 0x0F	; 15
     4d4:	98 b9       	out	0x08, r25	; 8
     4d6:	98 b1       	in	r25, 0x08	; 8
     4d8:	82 95       	swap	r24
     4da:	80 7f       	andi	r24, 0xF0	; 240
     4dc:	89 2b       	or	r24, r25
     4de:	88 b9       	out	0x08, r24	; 8
     4e0:	40 98       	cbi	0x08, 0	; 8
     4e2:	41 98       	cbi	0x08, 1	; 8
     4e4:	42 9a       	sbi	0x08, 2	; 8
     4e6:	8f ef       	ldi	r24, 0xFF	; 255
     4e8:	97 e4       	ldi	r25, 0x47	; 71
     4ea:	01 97       	sbiw	r24, 0x01	; 1
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <lcd_wr_command+0x3e>
     4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <lcd_wr_command+0x44>
     4f0:	00 00       	nop
     4f2:	42 98       	cbi	0x08, 2	; 8
     4f4:	08 95       	ret

000004f6 <lcd_init>:
     4f6:	97 df       	rcall	.-210    	; 0x426 <lcd_set_4bit>
     4f8:	86 e6       	ldi	r24, 0x66	; 102
     4fa:	9e e0       	ldi	r25, 0x0E	; 14
     4fc:	01 97       	sbiw	r24, 0x01	; 1
     4fe:	f1 f7       	brne	.-4      	; 0x4fc <lcd_init+0x6>
     500:	00 00       	nop
     502:	88 e2       	ldi	r24, 0x28	; 40
     504:	d3 df       	rcall	.-90     	; 0x4ac <lcd_wr_command>
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	d1 df       	rcall	.-94     	; 0x4ac <lcd_wr_command>
     50a:	86 e0       	ldi	r24, 0x06	; 6
     50c:	cf df       	rcall	.-98     	; 0x4ac <lcd_wr_command>
     50e:	8e e0       	ldi	r24, 0x0E	; 14
     510:	cd df       	rcall	.-102    	; 0x4ac <lcd_wr_command>
     512:	80 e8       	ldi	r24, 0x80	; 128
     514:	cb cf       	rjmp	.-106    	; 0x4ac <lcd_wr_command>
     516:	08 95       	ret

00000518 <lcd_cursor>:
     518:	82 30       	cpi	r24, 0x02	; 2
     51a:	69 f0       	breq	.+26     	; 0x536 <lcd_cursor+0x1e>
     51c:	18 f4       	brcc	.+6      	; 0x524 <lcd_cursor+0xc>
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	31 f0       	breq	.+12     	; 0x52e <lcd_cursor+0x16>
     522:	08 95       	ret
     524:	83 30       	cpi	r24, 0x03	; 3
     526:	59 f0       	breq	.+22     	; 0x53e <lcd_cursor+0x26>
     528:	84 30       	cpi	r24, 0x04	; 4
     52a:	69 f0       	breq	.+26     	; 0x546 <lcd_cursor+0x2e>
     52c:	08 95       	ret
     52e:	8f e7       	ldi	r24, 0x7F	; 127
     530:	86 0f       	add	r24, r22
     532:	bc cf       	rjmp	.-136    	; 0x4ac <lcd_wr_command>
     534:	08 95       	ret
     536:	8f eb       	ldi	r24, 0xBF	; 191
     538:	86 0f       	add	r24, r22
     53a:	b8 cf       	rjmp	.-144    	; 0x4ac <lcd_wr_command>
     53c:	08 95       	ret
     53e:	83 e9       	ldi	r24, 0x93	; 147
     540:	86 0f       	add	r24, r22
     542:	b4 cf       	rjmp	.-152    	; 0x4ac <lcd_wr_command>
     544:	08 95       	ret
     546:	83 ed       	ldi	r24, 0xD3	; 211
     548:	86 0f       	add	r24, r22
     54a:	b0 cf       	rjmp	.-160    	; 0x4ac <lcd_wr_command>
     54c:	08 95       	ret

0000054e <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
     54e:	cf 93       	push	r28
     550:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
     552:	e2 df       	rcall	.-60     	; 0x518 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
	temp = (temp & 0xF0);
	lcd_data_port_reg &= 0x0F;
     554:	88 b1       	in	r24, 0x08	; 8
     556:	8f 70       	andi	r24, 0x0F	; 15
     558:	88 b9       	out	0x08, r24	; 8
	lcd_data_port_reg |= temp;
     55a:	88 b1       	in	r24, 0x08	; 8
     55c:	9c 2f       	mov	r25, r28
     55e:	90 7f       	andi	r25, 0xF0	; 240
     560:	89 2b       	or	r24, r25
     562:	88 b9       	out	0x08, r24	; 8
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     564:	40 9a       	sbi	0x08, 0	; 8
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     566:	41 98       	cbi	0x08, 1	; 8
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     568:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     56a:	8f ef       	ldi	r24, 0xFF	; 255
     56c:	97 e4       	ldi	r25, 0x47	; 71
     56e:	01 97       	sbiw	r24, 0x01	; 1
     570:	f1 f7       	brne	.-4      	; 0x56e <lcd_wr_char+0x20>
     572:	00 c0       	rjmp	.+0      	; 0x574 <lcd_wr_char+0x26>
     574:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     576:	42 98       	cbi	0x08, 2	; 8
	
	alpha_num_char = (alpha_num_char & 0x0F);
	alpha_num_char = (alpha_num_char << 4);
	lcd_data_port_reg &= 0x0F;
     578:	88 b1       	in	r24, 0x08	; 8
     57a:	8f 70       	andi	r24, 0x0F	; 15
     57c:	88 b9       	out	0x08, r24	; 8
	lcd_data_port_reg |= alpha_num_char;
     57e:	88 b1       	in	r24, 0x08	; 8
     580:	c2 95       	swap	r28
     582:	c0 7f       	andi	r28, 0xF0	; 240
     584:	c8 2b       	or	r28, r24
     586:	c8 b9       	out	0x08, r28	; 8
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
     588:	40 9a       	sbi	0x08, 0	; 8
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
     58a:	41 98       	cbi	0x08, 1	; 8
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
     58c:	42 9a       	sbi	0x08, 2	; 8
     58e:	8f ef       	ldi	r24, 0xFF	; 255
     590:	97 e4       	ldi	r25, 0x47	; 71
     592:	01 97       	sbiw	r24, 0x01	; 1
     594:	f1 f7       	brne	.-4      	; 0x592 <lcd_wr_char+0x44>
     596:	00 c0       	rjmp	.+0      	; 0x598 <lcd_wr_char+0x4a>
     598:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
     59a:	42 98       	cbi	0x08, 2	; 8
}
     59c:	cf 91       	pop	r28
     59e:	08 95       	ret

000005a0 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
     5a0:	0f 93       	push	r16
     5a2:	1f 93       	push	r17
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
     5a8:	d8 2f       	mov	r29, r24
     5aa:	c6 2f       	mov	r28, r22
     5ac:	fa 01       	movw	r30, r20
	while(*str != '\0')
     5ae:	40 81       	ld	r20, Z
     5b0:	44 23       	and	r20, r20
     5b2:	61 f0       	breq	.+24     	; 0x5cc <lcd_string+0x2c>
     5b4:	8f 01       	movw	r16, r30
     5b6:	0f 5f       	subi	r16, 0xFF	; 255
     5b8:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_wr_char(row, column, *str);
     5ba:	6c 2f       	mov	r22, r28
     5bc:	8d 2f       	mov	r24, r29
     5be:	c7 df       	rcall	.-114    	; 0x54e <lcd_wr_char>
		str++;
		column+=1;
     5c0:	cf 5f       	subi	r28, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
     5c2:	f8 01       	movw	r30, r16
     5c4:	41 91       	ld	r20, Z+
     5c6:	8f 01       	movw	r16, r30
     5c8:	41 11       	cpse	r20, r1
     5ca:	f7 cf       	rjmp	.-18     	; 0x5ba <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	08 95       	ret

000005d6 <uart_init>:
 * Example Call: uart_init();
 */
void uart_init (unsigned int ubbr_value)
{
	// In UCSRB_reg, disable all bits setting the Baud Rate
	UCSRB_reg	= 0x00;
     5d6:	e1 ed       	ldi	r30, 0xD1	; 209
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	10 82       	st	Z, r1
	
	// In UBRRH_reg and UBRRL_reg, set the baud rate
	UBRRH_reg	= (unsigned char) ( ubbr_value >> 8 );
     5dc:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7000d5>
	UBRRL_reg	= (unsigned char) ( ubbr_value );
     5e0:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7000d4>
	
	// In UCSRC_reg, select the Asynchronous USART mode and the character size to 8 bits
	UCSRC_reg	&= ~( ( 1 << UMSEL1_bit ) | ( 1 << UMSEL0_bit ) );
     5e4:	a2 ed       	ldi	r26, 0xD2	; 210
     5e6:	b0 e0       	ldi	r27, 0x00	; 0
     5e8:	8c 91       	ld	r24, X
     5ea:	8f 73       	andi	r24, 0x3F	; 63
     5ec:	8c 93       	st	X, r24
	UCSRC_reg	|= ( ( 1 << UCSZ1_bit ) | ( 1 << UCSZ0_bit ) );
     5ee:	8c 91       	ld	r24, X
     5f0:	86 60       	ori	r24, 0x06	; 6
     5f2:	8c 93       	st	X, r24
	
	// In UCSRB_reg, enable the receiver and transmitter
	UCSRB_reg	|= ( ( 1 << TXEN_bit ) | ( 1 << RXEN_bit ) );
     5f4:	80 81       	ld	r24, Z
     5f6:	88 61       	ori	r24, 0x18	; 24
     5f8:	80 83       	st	Z, r24
	UCSRB_reg	&= ~( 1 << UCSZ2_bit );
     5fa:	80 81       	ld	r24, Z
     5fc:	8b 7f       	andi	r24, 0xFB	; 251
     5fe:	80 83       	st	Z, r24
     600:	08 95       	ret

00000602 <uart_tx>:
 * Logic: This function sends a character over the UART
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
     602:	e0 ed       	ldi	r30, 0xD0	; 208
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	90 81       	ld	r25, Z
     608:	95 ff       	sbrs	r25, 5
     60a:	fd cf       	rjmp	.-6      	; 0x606 <uart_tx+0x4>
	UDR_reg	= data;
     60c:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     610:	08 95       	ret

00000612 <uart_tx_string>:
 * Output: None
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	ec 01       	movw	r28, r24
	while(*data != '\0')
     618:	88 81       	ld	r24, Y
     61a:	88 23       	and	r24, r24
     61c:	29 f0       	breq	.+10     	; 0x628 <uart_tx_string+0x16>
     61e:	21 96       	adiw	r28, 0x01	; 1
	{
		uart_tx(*data);
     620:	f0 df       	rcall	.-32     	; 0x602 <uart_tx>
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
	while(*data != '\0')
     622:	89 91       	ld	r24, Y+
     624:	81 11       	cpse	r24, r1
     626:	fc cf       	rjmp	.-8      	; 0x620 <uart_tx_string+0xe>
	{
		uart_tx(*data);
		data++;
	}
}
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <__floatunsisf>:
     62e:	e8 94       	clt
     630:	09 c0       	rjmp	.+18     	; 0x644 <__floatsisf+0x12>

00000632 <__floatsisf>:
     632:	97 fb       	bst	r25, 7
     634:	3e f4       	brtc	.+14     	; 0x644 <__floatsisf+0x12>
     636:	90 95       	com	r25
     638:	80 95       	com	r24
     63a:	70 95       	com	r23
     63c:	61 95       	neg	r22
     63e:	7f 4f       	sbci	r23, 0xFF	; 255
     640:	8f 4f       	sbci	r24, 0xFF	; 255
     642:	9f 4f       	sbci	r25, 0xFF	; 255
     644:	99 23       	and	r25, r25
     646:	a9 f0       	breq	.+42     	; 0x672 <__floatsisf+0x40>
     648:	f9 2f       	mov	r31, r25
     64a:	96 e9       	ldi	r25, 0x96	; 150
     64c:	bb 27       	eor	r27, r27
     64e:	93 95       	inc	r25
     650:	f6 95       	lsr	r31
     652:	87 95       	ror	r24
     654:	77 95       	ror	r23
     656:	67 95       	ror	r22
     658:	b7 95       	ror	r27
     65a:	f1 11       	cpse	r31, r1
     65c:	f8 cf       	rjmp	.-16     	; 0x64e <__floatsisf+0x1c>
     65e:	fa f4       	brpl	.+62     	; 0x69e <__floatsisf+0x6c>
     660:	bb 0f       	add	r27, r27
     662:	11 f4       	brne	.+4      	; 0x668 <__floatsisf+0x36>
     664:	60 ff       	sbrs	r22, 0
     666:	1b c0       	rjmp	.+54     	; 0x69e <__floatsisf+0x6c>
     668:	6f 5f       	subi	r22, 0xFF	; 255
     66a:	7f 4f       	sbci	r23, 0xFF	; 255
     66c:	8f 4f       	sbci	r24, 0xFF	; 255
     66e:	9f 4f       	sbci	r25, 0xFF	; 255
     670:	16 c0       	rjmp	.+44     	; 0x69e <__floatsisf+0x6c>
     672:	88 23       	and	r24, r24
     674:	11 f0       	breq	.+4      	; 0x67a <__floatsisf+0x48>
     676:	96 e9       	ldi	r25, 0x96	; 150
     678:	11 c0       	rjmp	.+34     	; 0x69c <__floatsisf+0x6a>
     67a:	77 23       	and	r23, r23
     67c:	21 f0       	breq	.+8      	; 0x686 <__floatsisf+0x54>
     67e:	9e e8       	ldi	r25, 0x8E	; 142
     680:	87 2f       	mov	r24, r23
     682:	76 2f       	mov	r23, r22
     684:	05 c0       	rjmp	.+10     	; 0x690 <__floatsisf+0x5e>
     686:	66 23       	and	r22, r22
     688:	71 f0       	breq	.+28     	; 0x6a6 <__floatsisf+0x74>
     68a:	96 e8       	ldi	r25, 0x86	; 134
     68c:	86 2f       	mov	r24, r22
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	2a f0       	brmi	.+10     	; 0x69e <__floatsisf+0x6c>
     694:	9a 95       	dec	r25
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	da f7       	brpl	.-10     	; 0x694 <__floatsisf+0x62>
     69e:	88 0f       	add	r24, r24
     6a0:	96 95       	lsr	r25
     6a2:	87 95       	ror	r24
     6a4:	97 f9       	bld	r25, 7
     6a6:	08 95       	ret

000006a8 <vfprintf>:
     6a8:	2f 92       	push	r2
     6aa:	3f 92       	push	r3
     6ac:	4f 92       	push	r4
     6ae:	5f 92       	push	r5
     6b0:	6f 92       	push	r6
     6b2:	7f 92       	push	r7
     6b4:	8f 92       	push	r8
     6b6:	9f 92       	push	r9
     6b8:	af 92       	push	r10
     6ba:	bf 92       	push	r11
     6bc:	cf 92       	push	r12
     6be:	df 92       	push	r13
     6c0:	ef 92       	push	r14
     6c2:	ff 92       	push	r15
     6c4:	0f 93       	push	r16
     6c6:	1f 93       	push	r17
     6c8:	cf 93       	push	r28
     6ca:	df 93       	push	r29
     6cc:	cd b7       	in	r28, 0x3d	; 61
     6ce:	de b7       	in	r29, 0x3e	; 62
     6d0:	60 97       	sbiw	r28, 0x10	; 16
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	f8 94       	cli
     6d6:	de bf       	out	0x3e, r29	; 62
     6d8:	0f be       	out	0x3f, r0	; 63
     6da:	cd bf       	out	0x3d, r28	; 61
     6dc:	7c 01       	movw	r14, r24
     6de:	1b 01       	movw	r2, r22
     6e0:	6a 01       	movw	r12, r20
     6e2:	fc 01       	movw	r30, r24
     6e4:	17 82       	std	Z+7, r1	; 0x07
     6e6:	16 82       	std	Z+6, r1	; 0x06
     6e8:	83 81       	ldd	r24, Z+3	; 0x03
     6ea:	81 ff       	sbrs	r24, 1
     6ec:	2a c3       	rjmp	.+1620   	; 0xd42 <vfprintf+0x69a>
     6ee:	9e 01       	movw	r18, r28
     6f0:	2f 5f       	subi	r18, 0xFF	; 255
     6f2:	3f 4f       	sbci	r19, 0xFF	; 255
     6f4:	39 01       	movw	r6, r18
     6f6:	f7 01       	movw	r30, r14
     6f8:	93 81       	ldd	r25, Z+3	; 0x03
     6fa:	f1 01       	movw	r30, r2
     6fc:	93 fd       	sbrc	r25, 3
     6fe:	85 91       	lpm	r24, Z+
     700:	93 ff       	sbrs	r25, 3
     702:	81 91       	ld	r24, Z+
     704:	1f 01       	movw	r2, r30
     706:	88 23       	and	r24, r24
     708:	09 f4       	brne	.+2      	; 0x70c <vfprintf+0x64>
     70a:	17 c3       	rjmp	.+1582   	; 0xd3a <vfprintf+0x692>
     70c:	85 32       	cpi	r24, 0x25	; 37
     70e:	39 f4       	brne	.+14     	; 0x71e <vfprintf+0x76>
     710:	93 fd       	sbrc	r25, 3
     712:	85 91       	lpm	r24, Z+
     714:	93 ff       	sbrs	r25, 3
     716:	81 91       	ld	r24, Z+
     718:	1f 01       	movw	r2, r30
     71a:	85 32       	cpi	r24, 0x25	; 37
     71c:	31 f4       	brne	.+12     	; 0x72a <vfprintf+0x82>
     71e:	b7 01       	movw	r22, r14
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	39 d4       	rcall	.+2162   	; 0xf96 <fputc>
     724:	56 01       	movw	r10, r12
     726:	65 01       	movw	r12, r10
     728:	e6 cf       	rjmp	.-52     	; 0x6f6 <vfprintf+0x4e>
     72a:	10 e0       	ldi	r17, 0x00	; 0
     72c:	51 2c       	mov	r5, r1
     72e:	91 2c       	mov	r9, r1
     730:	ff e1       	ldi	r31, 0x1F	; 31
     732:	f9 15       	cp	r31, r9
     734:	d8 f0       	brcs	.+54     	; 0x76c <vfprintf+0xc4>
     736:	8b 32       	cpi	r24, 0x2B	; 43
     738:	79 f0       	breq	.+30     	; 0x758 <vfprintf+0xb0>
     73a:	38 f4       	brcc	.+14     	; 0x74a <vfprintf+0xa2>
     73c:	80 32       	cpi	r24, 0x20	; 32
     73e:	79 f0       	breq	.+30     	; 0x75e <vfprintf+0xb6>
     740:	83 32       	cpi	r24, 0x23	; 35
     742:	a1 f4       	brne	.+40     	; 0x76c <vfprintf+0xc4>
     744:	f9 2d       	mov	r31, r9
     746:	f0 61       	ori	r31, 0x10	; 16
     748:	2e c0       	rjmp	.+92     	; 0x7a6 <vfprintf+0xfe>
     74a:	8d 32       	cpi	r24, 0x2D	; 45
     74c:	61 f0       	breq	.+24     	; 0x766 <vfprintf+0xbe>
     74e:	80 33       	cpi	r24, 0x30	; 48
     750:	69 f4       	brne	.+26     	; 0x76c <vfprintf+0xc4>
     752:	29 2d       	mov	r18, r9
     754:	21 60       	ori	r18, 0x01	; 1
     756:	2d c0       	rjmp	.+90     	; 0x7b2 <vfprintf+0x10a>
     758:	39 2d       	mov	r19, r9
     75a:	32 60       	ori	r19, 0x02	; 2
     75c:	93 2e       	mov	r9, r19
     75e:	89 2d       	mov	r24, r9
     760:	84 60       	ori	r24, 0x04	; 4
     762:	98 2e       	mov	r9, r24
     764:	2a c0       	rjmp	.+84     	; 0x7ba <vfprintf+0x112>
     766:	e9 2d       	mov	r30, r9
     768:	e8 60       	ori	r30, 0x08	; 8
     76a:	15 c0       	rjmp	.+42     	; 0x796 <vfprintf+0xee>
     76c:	97 fc       	sbrc	r9, 7
     76e:	2d c0       	rjmp	.+90     	; 0x7ca <vfprintf+0x122>
     770:	20 ed       	ldi	r18, 0xD0	; 208
     772:	28 0f       	add	r18, r24
     774:	2a 30       	cpi	r18, 0x0A	; 10
     776:	88 f4       	brcc	.+34     	; 0x79a <vfprintf+0xf2>
     778:	96 fe       	sbrs	r9, 6
     77a:	06 c0       	rjmp	.+12     	; 0x788 <vfprintf+0xe0>
     77c:	3a e0       	ldi	r19, 0x0A	; 10
     77e:	13 9f       	mul	r17, r19
     780:	20 0d       	add	r18, r0
     782:	11 24       	eor	r1, r1
     784:	12 2f       	mov	r17, r18
     786:	19 c0       	rjmp	.+50     	; 0x7ba <vfprintf+0x112>
     788:	8a e0       	ldi	r24, 0x0A	; 10
     78a:	58 9e       	mul	r5, r24
     78c:	20 0d       	add	r18, r0
     78e:	11 24       	eor	r1, r1
     790:	52 2e       	mov	r5, r18
     792:	e9 2d       	mov	r30, r9
     794:	e0 62       	ori	r30, 0x20	; 32
     796:	9e 2e       	mov	r9, r30
     798:	10 c0       	rjmp	.+32     	; 0x7ba <vfprintf+0x112>
     79a:	8e 32       	cpi	r24, 0x2E	; 46
     79c:	31 f4       	brne	.+12     	; 0x7aa <vfprintf+0x102>
     79e:	96 fc       	sbrc	r9, 6
     7a0:	cc c2       	rjmp	.+1432   	; 0xd3a <vfprintf+0x692>
     7a2:	f9 2d       	mov	r31, r9
     7a4:	f0 64       	ori	r31, 0x40	; 64
     7a6:	9f 2e       	mov	r9, r31
     7a8:	08 c0       	rjmp	.+16     	; 0x7ba <vfprintf+0x112>
     7aa:	8c 36       	cpi	r24, 0x6C	; 108
     7ac:	21 f4       	brne	.+8      	; 0x7b6 <vfprintf+0x10e>
     7ae:	29 2d       	mov	r18, r9
     7b0:	20 68       	ori	r18, 0x80	; 128
     7b2:	92 2e       	mov	r9, r18
     7b4:	02 c0       	rjmp	.+4      	; 0x7ba <vfprintf+0x112>
     7b6:	88 36       	cpi	r24, 0x68	; 104
     7b8:	41 f4       	brne	.+16     	; 0x7ca <vfprintf+0x122>
     7ba:	f1 01       	movw	r30, r2
     7bc:	93 fd       	sbrc	r25, 3
     7be:	85 91       	lpm	r24, Z+
     7c0:	93 ff       	sbrs	r25, 3
     7c2:	81 91       	ld	r24, Z+
     7c4:	1f 01       	movw	r2, r30
     7c6:	81 11       	cpse	r24, r1
     7c8:	b3 cf       	rjmp	.-154    	; 0x730 <vfprintf+0x88>
     7ca:	9b eb       	ldi	r25, 0xBB	; 187
     7cc:	98 0f       	add	r25, r24
     7ce:	93 30       	cpi	r25, 0x03	; 3
     7d0:	20 f4       	brcc	.+8      	; 0x7da <vfprintf+0x132>
     7d2:	99 2d       	mov	r25, r9
     7d4:	90 61       	ori	r25, 0x10	; 16
     7d6:	80 5e       	subi	r24, 0xE0	; 224
     7d8:	07 c0       	rjmp	.+14     	; 0x7e8 <vfprintf+0x140>
     7da:	9b e9       	ldi	r25, 0x9B	; 155
     7dc:	98 0f       	add	r25, r24
     7de:	93 30       	cpi	r25, 0x03	; 3
     7e0:	08 f0       	brcs	.+2      	; 0x7e4 <vfprintf+0x13c>
     7e2:	59 c1       	rjmp	.+690    	; 0xa96 <vfprintf+0x3ee>
     7e4:	99 2d       	mov	r25, r9
     7e6:	9f 7e       	andi	r25, 0xEF	; 239
     7e8:	96 ff       	sbrs	r25, 6
     7ea:	16 e0       	ldi	r17, 0x06	; 6
     7ec:	9f 73       	andi	r25, 0x3F	; 63
     7ee:	99 2e       	mov	r9, r25
     7f0:	85 36       	cpi	r24, 0x65	; 101
     7f2:	19 f4       	brne	.+6      	; 0x7fa <vfprintf+0x152>
     7f4:	90 64       	ori	r25, 0x40	; 64
     7f6:	99 2e       	mov	r9, r25
     7f8:	08 c0       	rjmp	.+16     	; 0x80a <vfprintf+0x162>
     7fa:	86 36       	cpi	r24, 0x66	; 102
     7fc:	21 f4       	brne	.+8      	; 0x806 <vfprintf+0x15e>
     7fe:	39 2f       	mov	r19, r25
     800:	30 68       	ori	r19, 0x80	; 128
     802:	93 2e       	mov	r9, r19
     804:	02 c0       	rjmp	.+4      	; 0x80a <vfprintf+0x162>
     806:	11 11       	cpse	r17, r1
     808:	11 50       	subi	r17, 0x01	; 1
     80a:	97 fe       	sbrs	r9, 7
     80c:	07 c0       	rjmp	.+14     	; 0x81c <vfprintf+0x174>
     80e:	1c 33       	cpi	r17, 0x3C	; 60
     810:	50 f4       	brcc	.+20     	; 0x826 <vfprintf+0x17e>
     812:	44 24       	eor	r4, r4
     814:	43 94       	inc	r4
     816:	41 0e       	add	r4, r17
     818:	27 e0       	ldi	r18, 0x07	; 7
     81a:	0b c0       	rjmp	.+22     	; 0x832 <vfprintf+0x18a>
     81c:	18 30       	cpi	r17, 0x08	; 8
     81e:	38 f0       	brcs	.+14     	; 0x82e <vfprintf+0x186>
     820:	27 e0       	ldi	r18, 0x07	; 7
     822:	17 e0       	ldi	r17, 0x07	; 7
     824:	05 c0       	rjmp	.+10     	; 0x830 <vfprintf+0x188>
     826:	27 e0       	ldi	r18, 0x07	; 7
     828:	9c e3       	ldi	r25, 0x3C	; 60
     82a:	49 2e       	mov	r4, r25
     82c:	02 c0       	rjmp	.+4      	; 0x832 <vfprintf+0x18a>
     82e:	21 2f       	mov	r18, r17
     830:	41 2c       	mov	r4, r1
     832:	56 01       	movw	r10, r12
     834:	84 e0       	ldi	r24, 0x04	; 4
     836:	a8 0e       	add	r10, r24
     838:	b1 1c       	adc	r11, r1
     83a:	f6 01       	movw	r30, r12
     83c:	60 81       	ld	r22, Z
     83e:	71 81       	ldd	r23, Z+1	; 0x01
     840:	82 81       	ldd	r24, Z+2	; 0x02
     842:	93 81       	ldd	r25, Z+3	; 0x03
     844:	04 2d       	mov	r16, r4
     846:	a3 01       	movw	r20, r6
     848:	b8 d2       	rcall	.+1392   	; 0xdba <__ftoa_engine>
     84a:	6c 01       	movw	r12, r24
     84c:	f9 81       	ldd	r31, Y+1	; 0x01
     84e:	fc 87       	std	Y+12, r31	; 0x0c
     850:	f0 ff       	sbrs	r31, 0
     852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x1b0>
     854:	f3 ff       	sbrs	r31, 3
     856:	06 c0       	rjmp	.+12     	; 0x864 <vfprintf+0x1bc>
     858:	91 fc       	sbrc	r9, 1
     85a:	06 c0       	rjmp	.+12     	; 0x868 <vfprintf+0x1c0>
     85c:	92 fe       	sbrs	r9, 2
     85e:	06 c0       	rjmp	.+12     	; 0x86c <vfprintf+0x1c4>
     860:	00 e2       	ldi	r16, 0x20	; 32
     862:	05 c0       	rjmp	.+10     	; 0x86e <vfprintf+0x1c6>
     864:	0d e2       	ldi	r16, 0x2D	; 45
     866:	03 c0       	rjmp	.+6      	; 0x86e <vfprintf+0x1c6>
     868:	0b e2       	ldi	r16, 0x2B	; 43
     86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x1c6>
     86c:	00 e0       	ldi	r16, 0x00	; 0
     86e:	8c 85       	ldd	r24, Y+12	; 0x0c
     870:	8c 70       	andi	r24, 0x0C	; 12
     872:	19 f0       	breq	.+6      	; 0x87a <vfprintf+0x1d2>
     874:	01 11       	cpse	r16, r1
     876:	43 c2       	rjmp	.+1158   	; 0xcfe <vfprintf+0x656>
     878:	80 c2       	rjmp	.+1280   	; 0xd7a <vfprintf+0x6d2>
     87a:	97 fe       	sbrs	r9, 7
     87c:	10 c0       	rjmp	.+32     	; 0x89e <vfprintf+0x1f6>
     87e:	4c 0c       	add	r4, r12
     880:	fc 85       	ldd	r31, Y+12	; 0x0c
     882:	f4 ff       	sbrs	r31, 4
     884:	04 c0       	rjmp	.+8      	; 0x88e <vfprintf+0x1e6>
     886:	8a 81       	ldd	r24, Y+2	; 0x02
     888:	81 33       	cpi	r24, 0x31	; 49
     88a:	09 f4       	brne	.+2      	; 0x88e <vfprintf+0x1e6>
     88c:	4a 94       	dec	r4
     88e:	14 14       	cp	r1, r4
     890:	74 f5       	brge	.+92     	; 0x8ee <vfprintf+0x246>
     892:	28 e0       	ldi	r18, 0x08	; 8
     894:	24 15       	cp	r18, r4
     896:	78 f5       	brcc	.+94     	; 0x8f6 <vfprintf+0x24e>
     898:	88 e0       	ldi	r24, 0x08	; 8
     89a:	48 2e       	mov	r4, r24
     89c:	2c c0       	rjmp	.+88     	; 0x8f6 <vfprintf+0x24e>
     89e:	96 fc       	sbrc	r9, 6
     8a0:	2a c0       	rjmp	.+84     	; 0x8f6 <vfprintf+0x24e>
     8a2:	81 2f       	mov	r24, r17
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	8c 15       	cp	r24, r12
     8a8:	9d 05       	cpc	r25, r13
     8aa:	9c f0       	brlt	.+38     	; 0x8d2 <vfprintf+0x22a>
     8ac:	3c ef       	ldi	r19, 0xFC	; 252
     8ae:	c3 16       	cp	r12, r19
     8b0:	3f ef       	ldi	r19, 0xFF	; 255
     8b2:	d3 06       	cpc	r13, r19
     8b4:	74 f0       	brlt	.+28     	; 0x8d2 <vfprintf+0x22a>
     8b6:	89 2d       	mov	r24, r9
     8b8:	80 68       	ori	r24, 0x80	; 128
     8ba:	98 2e       	mov	r9, r24
     8bc:	0a c0       	rjmp	.+20     	; 0x8d2 <vfprintf+0x22a>
     8be:	e2 e0       	ldi	r30, 0x02	; 2
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	ec 0f       	add	r30, r28
     8c4:	fd 1f       	adc	r31, r29
     8c6:	e1 0f       	add	r30, r17
     8c8:	f1 1d       	adc	r31, r1
     8ca:	80 81       	ld	r24, Z
     8cc:	80 33       	cpi	r24, 0x30	; 48
     8ce:	19 f4       	brne	.+6      	; 0x8d6 <vfprintf+0x22e>
     8d0:	11 50       	subi	r17, 0x01	; 1
     8d2:	11 11       	cpse	r17, r1
     8d4:	f4 cf       	rjmp	.-24     	; 0x8be <vfprintf+0x216>
     8d6:	97 fe       	sbrs	r9, 7
     8d8:	0e c0       	rjmp	.+28     	; 0x8f6 <vfprintf+0x24e>
     8da:	44 24       	eor	r4, r4
     8dc:	43 94       	inc	r4
     8de:	41 0e       	add	r4, r17
     8e0:	81 2f       	mov	r24, r17
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	c8 16       	cp	r12, r24
     8e6:	d9 06       	cpc	r13, r25
     8e8:	2c f4       	brge	.+10     	; 0x8f4 <vfprintf+0x24c>
     8ea:	1c 19       	sub	r17, r12
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <vfprintf+0x24e>
     8ee:	44 24       	eor	r4, r4
     8f0:	43 94       	inc	r4
     8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <vfprintf+0x24e>
     8f4:	10 e0       	ldi	r17, 0x00	; 0
     8f6:	97 fe       	sbrs	r9, 7
     8f8:	06 c0       	rjmp	.+12     	; 0x906 <vfprintf+0x25e>
     8fa:	1c 14       	cp	r1, r12
     8fc:	1d 04       	cpc	r1, r13
     8fe:	34 f4       	brge	.+12     	; 0x90c <vfprintf+0x264>
     900:	c6 01       	movw	r24, r12
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	05 c0       	rjmp	.+10     	; 0x910 <vfprintf+0x268>
     906:	85 e0       	ldi	r24, 0x05	; 5
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	02 c0       	rjmp	.+4      	; 0x910 <vfprintf+0x268>
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	01 11       	cpse	r16, r1
     912:	01 96       	adiw	r24, 0x01	; 1
     914:	11 23       	and	r17, r17
     916:	31 f0       	breq	.+12     	; 0x924 <vfprintf+0x27c>
     918:	21 2f       	mov	r18, r17
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	82 0f       	add	r24, r18
     922:	93 1f       	adc	r25, r19
     924:	25 2d       	mov	r18, r5
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	82 17       	cp	r24, r18
     92a:	93 07       	cpc	r25, r19
     92c:	14 f4       	brge	.+4      	; 0x932 <vfprintf+0x28a>
     92e:	58 1a       	sub	r5, r24
     930:	01 c0       	rjmp	.+2      	; 0x934 <vfprintf+0x28c>
     932:	51 2c       	mov	r5, r1
     934:	89 2d       	mov	r24, r9
     936:	89 70       	andi	r24, 0x09	; 9
     938:	41 f4       	brne	.+16     	; 0x94a <vfprintf+0x2a2>
     93a:	55 20       	and	r5, r5
     93c:	31 f0       	breq	.+12     	; 0x94a <vfprintf+0x2a2>
     93e:	b7 01       	movw	r22, r14
     940:	80 e2       	ldi	r24, 0x20	; 32
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	28 d3       	rcall	.+1616   	; 0xf96 <fputc>
     946:	5a 94       	dec	r5
     948:	f8 cf       	rjmp	.-16     	; 0x93a <vfprintf+0x292>
     94a:	00 23       	and	r16, r16
     94c:	21 f0       	breq	.+8      	; 0x956 <vfprintf+0x2ae>
     94e:	b7 01       	movw	r22, r14
     950:	80 2f       	mov	r24, r16
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	20 d3       	rcall	.+1600   	; 0xf96 <fputc>
     956:	93 fc       	sbrc	r9, 3
     958:	08 c0       	rjmp	.+16     	; 0x96a <vfprintf+0x2c2>
     95a:	55 20       	and	r5, r5
     95c:	31 f0       	breq	.+12     	; 0x96a <vfprintf+0x2c2>
     95e:	b7 01       	movw	r22, r14
     960:	80 e3       	ldi	r24, 0x30	; 48
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	18 d3       	rcall	.+1584   	; 0xf96 <fputc>
     966:	5a 94       	dec	r5
     968:	f8 cf       	rjmp	.-16     	; 0x95a <vfprintf+0x2b2>
     96a:	97 fe       	sbrs	r9, 7
     96c:	4a c0       	rjmp	.+148    	; 0xa02 <vfprintf+0x35a>
     96e:	46 01       	movw	r8, r12
     970:	d7 fe       	sbrs	r13, 7
     972:	02 c0       	rjmp	.+4      	; 0x978 <vfprintf+0x2d0>
     974:	81 2c       	mov	r8, r1
     976:	91 2c       	mov	r9, r1
     978:	c6 01       	movw	r24, r12
     97a:	88 19       	sub	r24, r8
     97c:	99 09       	sbc	r25, r9
     97e:	f3 01       	movw	r30, r6
     980:	e8 0f       	add	r30, r24
     982:	f9 1f       	adc	r31, r25
     984:	fe 87       	std	Y+14, r31	; 0x0e
     986:	ed 87       	std	Y+13, r30	; 0x0d
     988:	96 01       	movw	r18, r12
     98a:	24 19       	sub	r18, r4
     98c:	31 09       	sbc	r19, r1
     98e:	38 8b       	std	Y+16, r19	; 0x10
     990:	2f 87       	std	Y+15, r18	; 0x0f
     992:	01 2f       	mov	r16, r17
     994:	10 e0       	ldi	r17, 0x00	; 0
     996:	11 95       	neg	r17
     998:	01 95       	neg	r16
     99a:	11 09       	sbc	r17, r1
     99c:	3f ef       	ldi	r19, 0xFF	; 255
     99e:	83 16       	cp	r8, r19
     9a0:	93 06       	cpc	r9, r19
     9a2:	21 f4       	brne	.+8      	; 0x9ac <vfprintf+0x304>
     9a4:	b7 01       	movw	r22, r14
     9a6:	8e e2       	ldi	r24, 0x2E	; 46
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	f5 d2       	rcall	.+1514   	; 0xf96 <fputc>
     9ac:	c8 14       	cp	r12, r8
     9ae:	d9 04       	cpc	r13, r9
     9b0:	4c f0       	brlt	.+18     	; 0x9c4 <vfprintf+0x31c>
     9b2:	8f 85       	ldd	r24, Y+15	; 0x0f
     9b4:	98 89       	ldd	r25, Y+16	; 0x10
     9b6:	88 15       	cp	r24, r8
     9b8:	99 05       	cpc	r25, r9
     9ba:	24 f4       	brge	.+8      	; 0x9c4 <vfprintf+0x31c>
     9bc:	ed 85       	ldd	r30, Y+13	; 0x0d
     9be:	fe 85       	ldd	r31, Y+14	; 0x0e
     9c0:	81 81       	ldd	r24, Z+1	; 0x01
     9c2:	01 c0       	rjmp	.+2      	; 0x9c6 <vfprintf+0x31e>
     9c4:	80 e3       	ldi	r24, 0x30	; 48
     9c6:	f1 e0       	ldi	r31, 0x01	; 1
     9c8:	8f 1a       	sub	r8, r31
     9ca:	91 08       	sbc	r9, r1
     9cc:	2d 85       	ldd	r18, Y+13	; 0x0d
     9ce:	3e 85       	ldd	r19, Y+14	; 0x0e
     9d0:	2f 5f       	subi	r18, 0xFF	; 255
     9d2:	3f 4f       	sbci	r19, 0xFF	; 255
     9d4:	3e 87       	std	Y+14, r19	; 0x0e
     9d6:	2d 87       	std	Y+13, r18	; 0x0d
     9d8:	80 16       	cp	r8, r16
     9da:	91 06       	cpc	r9, r17
     9dc:	24 f0       	brlt	.+8      	; 0x9e6 <vfprintf+0x33e>
     9de:	b7 01       	movw	r22, r14
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	d9 d2       	rcall	.+1458   	; 0xf96 <fputc>
     9e4:	db cf       	rjmp	.-74     	; 0x99c <vfprintf+0x2f4>
     9e6:	c8 14       	cp	r12, r8
     9e8:	d9 04       	cpc	r13, r9
     9ea:	41 f4       	brne	.+16     	; 0x9fc <vfprintf+0x354>
     9ec:	9a 81       	ldd	r25, Y+2	; 0x02
     9ee:	96 33       	cpi	r25, 0x36	; 54
     9f0:	20 f4       	brcc	.+8      	; 0x9fa <vfprintf+0x352>
     9f2:	95 33       	cpi	r25, 0x35	; 53
     9f4:	19 f4       	brne	.+6      	; 0x9fc <vfprintf+0x354>
     9f6:	3c 85       	ldd	r19, Y+12	; 0x0c
     9f8:	34 ff       	sbrs	r19, 4
     9fa:	81 e3       	ldi	r24, 0x31	; 49
     9fc:	b7 01       	movw	r22, r14
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	48 c0       	rjmp	.+144    	; 0xa92 <vfprintf+0x3ea>
     a02:	8a 81       	ldd	r24, Y+2	; 0x02
     a04:	81 33       	cpi	r24, 0x31	; 49
     a06:	19 f0       	breq	.+6      	; 0xa0e <vfprintf+0x366>
     a08:	9c 85       	ldd	r25, Y+12	; 0x0c
     a0a:	9f 7e       	andi	r25, 0xEF	; 239
     a0c:	9c 87       	std	Y+12, r25	; 0x0c
     a0e:	b7 01       	movw	r22, r14
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	c1 d2       	rcall	.+1410   	; 0xf96 <fputc>
     a14:	11 11       	cpse	r17, r1
     a16:	05 c0       	rjmp	.+10     	; 0xa22 <vfprintf+0x37a>
     a18:	94 fc       	sbrc	r9, 4
     a1a:	16 c0       	rjmp	.+44     	; 0xa48 <vfprintf+0x3a0>
     a1c:	85 e6       	ldi	r24, 0x65	; 101
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	15 c0       	rjmp	.+42     	; 0xa4c <vfprintf+0x3a4>
     a22:	b7 01       	movw	r22, r14
     a24:	8e e2       	ldi	r24, 0x2E	; 46
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	b6 d2       	rcall	.+1388   	; 0xf96 <fputc>
     a2a:	1e 5f       	subi	r17, 0xFE	; 254
     a2c:	82 e0       	ldi	r24, 0x02	; 2
     a2e:	01 e0       	ldi	r16, 0x01	; 1
     a30:	08 0f       	add	r16, r24
     a32:	f3 01       	movw	r30, r6
     a34:	e8 0f       	add	r30, r24
     a36:	f1 1d       	adc	r31, r1
     a38:	80 81       	ld	r24, Z
     a3a:	b7 01       	movw	r22, r14
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	ab d2       	rcall	.+1366   	; 0xf96 <fputc>
     a40:	80 2f       	mov	r24, r16
     a42:	01 13       	cpse	r16, r17
     a44:	f4 cf       	rjmp	.-24     	; 0xa2e <vfprintf+0x386>
     a46:	e8 cf       	rjmp	.-48     	; 0xa18 <vfprintf+0x370>
     a48:	85 e4       	ldi	r24, 0x45	; 69
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	b7 01       	movw	r22, r14
     a4e:	a3 d2       	rcall	.+1350   	; 0xf96 <fputc>
     a50:	d7 fc       	sbrc	r13, 7
     a52:	06 c0       	rjmp	.+12     	; 0xa60 <vfprintf+0x3b8>
     a54:	c1 14       	cp	r12, r1
     a56:	d1 04       	cpc	r13, r1
     a58:	41 f4       	brne	.+16     	; 0xa6a <vfprintf+0x3c2>
     a5a:	ec 85       	ldd	r30, Y+12	; 0x0c
     a5c:	e4 ff       	sbrs	r30, 4
     a5e:	05 c0       	rjmp	.+10     	; 0xa6a <vfprintf+0x3c2>
     a60:	d1 94       	neg	r13
     a62:	c1 94       	neg	r12
     a64:	d1 08       	sbc	r13, r1
     a66:	8d e2       	ldi	r24, 0x2D	; 45
     a68:	01 c0       	rjmp	.+2      	; 0xa6c <vfprintf+0x3c4>
     a6a:	8b e2       	ldi	r24, 0x2B	; 43
     a6c:	b7 01       	movw	r22, r14
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	92 d2       	rcall	.+1316   	; 0xf96 <fputc>
     a72:	80 e3       	ldi	r24, 0x30	; 48
     a74:	2a e0       	ldi	r18, 0x0A	; 10
     a76:	c2 16       	cp	r12, r18
     a78:	d1 04       	cpc	r13, r1
     a7a:	2c f0       	brlt	.+10     	; 0xa86 <vfprintf+0x3de>
     a7c:	8f 5f       	subi	r24, 0xFF	; 255
     a7e:	fa e0       	ldi	r31, 0x0A	; 10
     a80:	cf 1a       	sub	r12, r31
     a82:	d1 08       	sbc	r13, r1
     a84:	f7 cf       	rjmp	.-18     	; 0xa74 <vfprintf+0x3cc>
     a86:	b7 01       	movw	r22, r14
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	85 d2       	rcall	.+1290   	; 0xf96 <fputc>
     a8c:	b7 01       	movw	r22, r14
     a8e:	c6 01       	movw	r24, r12
     a90:	c0 96       	adiw	r24, 0x30	; 48
     a92:	81 d2       	rcall	.+1282   	; 0xf96 <fputc>
     a94:	49 c1       	rjmp	.+658    	; 0xd28 <vfprintf+0x680>
     a96:	83 36       	cpi	r24, 0x63	; 99
     a98:	31 f0       	breq	.+12     	; 0xaa6 <vfprintf+0x3fe>
     a9a:	83 37       	cpi	r24, 0x73	; 115
     a9c:	79 f0       	breq	.+30     	; 0xabc <vfprintf+0x414>
     a9e:	83 35       	cpi	r24, 0x53	; 83
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <vfprintf+0x3fc>
     aa2:	52 c0       	rjmp	.+164    	; 0xb48 <vfprintf+0x4a0>
     aa4:	1f c0       	rjmp	.+62     	; 0xae4 <vfprintf+0x43c>
     aa6:	56 01       	movw	r10, r12
     aa8:	32 e0       	ldi	r19, 0x02	; 2
     aaa:	a3 0e       	add	r10, r19
     aac:	b1 1c       	adc	r11, r1
     aae:	f6 01       	movw	r30, r12
     ab0:	80 81       	ld	r24, Z
     ab2:	89 83       	std	Y+1, r24	; 0x01
     ab4:	01 e0       	ldi	r16, 0x01	; 1
     ab6:	10 e0       	ldi	r17, 0x00	; 0
     ab8:	63 01       	movw	r12, r6
     aba:	11 c0       	rjmp	.+34     	; 0xade <vfprintf+0x436>
     abc:	56 01       	movw	r10, r12
     abe:	f2 e0       	ldi	r31, 0x02	; 2
     ac0:	af 0e       	add	r10, r31
     ac2:	b1 1c       	adc	r11, r1
     ac4:	f6 01       	movw	r30, r12
     ac6:	c0 80       	ld	r12, Z
     ac8:	d1 80       	ldd	r13, Z+1	; 0x01
     aca:	96 fe       	sbrs	r9, 6
     acc:	03 c0       	rjmp	.+6      	; 0xad4 <vfprintf+0x42c>
     ace:	61 2f       	mov	r22, r17
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <vfprintf+0x430>
     ad4:	6f ef       	ldi	r22, 0xFF	; 255
     ad6:	7f ef       	ldi	r23, 0xFF	; 255
     ad8:	c6 01       	movw	r24, r12
     ada:	52 d2       	rcall	.+1188   	; 0xf80 <strnlen>
     adc:	8c 01       	movw	r16, r24
     ade:	f9 2d       	mov	r31, r9
     ae0:	ff 77       	andi	r31, 0x7F	; 127
     ae2:	13 c0       	rjmp	.+38     	; 0xb0a <vfprintf+0x462>
     ae4:	56 01       	movw	r10, r12
     ae6:	22 e0       	ldi	r18, 0x02	; 2
     ae8:	a2 0e       	add	r10, r18
     aea:	b1 1c       	adc	r11, r1
     aec:	f6 01       	movw	r30, r12
     aee:	c0 80       	ld	r12, Z
     af0:	d1 80       	ldd	r13, Z+1	; 0x01
     af2:	96 fe       	sbrs	r9, 6
     af4:	03 c0       	rjmp	.+6      	; 0xafc <vfprintf+0x454>
     af6:	61 2f       	mov	r22, r17
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <vfprintf+0x458>
     afc:	6f ef       	ldi	r22, 0xFF	; 255
     afe:	7f ef       	ldi	r23, 0xFF	; 255
     b00:	c6 01       	movw	r24, r12
     b02:	33 d2       	rcall	.+1126   	; 0xf6a <strnlen_P>
     b04:	8c 01       	movw	r16, r24
     b06:	f9 2d       	mov	r31, r9
     b08:	f0 68       	ori	r31, 0x80	; 128
     b0a:	9f 2e       	mov	r9, r31
     b0c:	f3 fd       	sbrc	r31, 3
     b0e:	18 c0       	rjmp	.+48     	; 0xb40 <vfprintf+0x498>
     b10:	85 2d       	mov	r24, r5
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	08 17       	cp	r16, r24
     b16:	19 07       	cpc	r17, r25
     b18:	98 f4       	brcc	.+38     	; 0xb40 <vfprintf+0x498>
     b1a:	b7 01       	movw	r22, r14
     b1c:	80 e2       	ldi	r24, 0x20	; 32
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	3a d2       	rcall	.+1140   	; 0xf96 <fputc>
     b22:	5a 94       	dec	r5
     b24:	f5 cf       	rjmp	.-22     	; 0xb10 <vfprintf+0x468>
     b26:	f6 01       	movw	r30, r12
     b28:	97 fc       	sbrc	r9, 7
     b2a:	85 91       	lpm	r24, Z+
     b2c:	97 fe       	sbrs	r9, 7
     b2e:	81 91       	ld	r24, Z+
     b30:	6f 01       	movw	r12, r30
     b32:	b7 01       	movw	r22, r14
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	2f d2       	rcall	.+1118   	; 0xf96 <fputc>
     b38:	51 10       	cpse	r5, r1
     b3a:	5a 94       	dec	r5
     b3c:	01 50       	subi	r16, 0x01	; 1
     b3e:	11 09       	sbc	r17, r1
     b40:	01 15       	cp	r16, r1
     b42:	11 05       	cpc	r17, r1
     b44:	81 f7       	brne	.-32     	; 0xb26 <vfprintf+0x47e>
     b46:	f0 c0       	rjmp	.+480    	; 0xd28 <vfprintf+0x680>
     b48:	84 36       	cpi	r24, 0x64	; 100
     b4a:	11 f0       	breq	.+4      	; 0xb50 <vfprintf+0x4a8>
     b4c:	89 36       	cpi	r24, 0x69	; 105
     b4e:	59 f5       	brne	.+86     	; 0xba6 <vfprintf+0x4fe>
     b50:	56 01       	movw	r10, r12
     b52:	97 fe       	sbrs	r9, 7
     b54:	09 c0       	rjmp	.+18     	; 0xb68 <vfprintf+0x4c0>
     b56:	24 e0       	ldi	r18, 0x04	; 4
     b58:	a2 0e       	add	r10, r18
     b5a:	b1 1c       	adc	r11, r1
     b5c:	f6 01       	movw	r30, r12
     b5e:	60 81       	ld	r22, Z
     b60:	71 81       	ldd	r23, Z+1	; 0x01
     b62:	82 81       	ldd	r24, Z+2	; 0x02
     b64:	93 81       	ldd	r25, Z+3	; 0x03
     b66:	0a c0       	rjmp	.+20     	; 0xb7c <vfprintf+0x4d4>
     b68:	f2 e0       	ldi	r31, 0x02	; 2
     b6a:	af 0e       	add	r10, r31
     b6c:	b1 1c       	adc	r11, r1
     b6e:	f6 01       	movw	r30, r12
     b70:	60 81       	ld	r22, Z
     b72:	71 81       	ldd	r23, Z+1	; 0x01
     b74:	07 2e       	mov	r0, r23
     b76:	00 0c       	add	r0, r0
     b78:	88 0b       	sbc	r24, r24
     b7a:	99 0b       	sbc	r25, r25
     b7c:	f9 2d       	mov	r31, r9
     b7e:	ff 76       	andi	r31, 0x6F	; 111
     b80:	9f 2e       	mov	r9, r31
     b82:	97 ff       	sbrs	r25, 7
     b84:	09 c0       	rjmp	.+18     	; 0xb98 <vfprintf+0x4f0>
     b86:	90 95       	com	r25
     b88:	80 95       	com	r24
     b8a:	70 95       	com	r23
     b8c:	61 95       	neg	r22
     b8e:	7f 4f       	sbci	r23, 0xFF	; 255
     b90:	8f 4f       	sbci	r24, 0xFF	; 255
     b92:	9f 4f       	sbci	r25, 0xFF	; 255
     b94:	f0 68       	ori	r31, 0x80	; 128
     b96:	9f 2e       	mov	r9, r31
     b98:	2a e0       	ldi	r18, 0x0A	; 10
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	a3 01       	movw	r20, r6
     b9e:	65 d2       	rcall	.+1226   	; 0x106a <__ultoa_invert>
     ba0:	c8 2e       	mov	r12, r24
     ba2:	c6 18       	sub	r12, r6
     ba4:	3e c0       	rjmp	.+124    	; 0xc22 <vfprintf+0x57a>
     ba6:	09 2d       	mov	r16, r9
     ba8:	85 37       	cpi	r24, 0x75	; 117
     baa:	21 f4       	brne	.+8      	; 0xbb4 <vfprintf+0x50c>
     bac:	0f 7e       	andi	r16, 0xEF	; 239
     bae:	2a e0       	ldi	r18, 0x0A	; 10
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	1d c0       	rjmp	.+58     	; 0xbee <vfprintf+0x546>
     bb4:	09 7f       	andi	r16, 0xF9	; 249
     bb6:	8f 36       	cpi	r24, 0x6F	; 111
     bb8:	91 f0       	breq	.+36     	; 0xbde <vfprintf+0x536>
     bba:	18 f4       	brcc	.+6      	; 0xbc2 <vfprintf+0x51a>
     bbc:	88 35       	cpi	r24, 0x58	; 88
     bbe:	59 f0       	breq	.+22     	; 0xbd6 <vfprintf+0x52e>
     bc0:	bc c0       	rjmp	.+376    	; 0xd3a <vfprintf+0x692>
     bc2:	80 37       	cpi	r24, 0x70	; 112
     bc4:	19 f0       	breq	.+6      	; 0xbcc <vfprintf+0x524>
     bc6:	88 37       	cpi	r24, 0x78	; 120
     bc8:	11 f0       	breq	.+4      	; 0xbce <vfprintf+0x526>
     bca:	b7 c0       	rjmp	.+366    	; 0xd3a <vfprintf+0x692>
     bcc:	00 61       	ori	r16, 0x10	; 16
     bce:	04 ff       	sbrs	r16, 4
     bd0:	09 c0       	rjmp	.+18     	; 0xbe4 <vfprintf+0x53c>
     bd2:	04 60       	ori	r16, 0x04	; 4
     bd4:	07 c0       	rjmp	.+14     	; 0xbe4 <vfprintf+0x53c>
     bd6:	94 fe       	sbrs	r9, 4
     bd8:	08 c0       	rjmp	.+16     	; 0xbea <vfprintf+0x542>
     bda:	06 60       	ori	r16, 0x06	; 6
     bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0x542>
     bde:	28 e0       	ldi	r18, 0x08	; 8
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	05 c0       	rjmp	.+10     	; 0xbee <vfprintf+0x546>
     be4:	20 e1       	ldi	r18, 0x10	; 16
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	02 c0       	rjmp	.+4      	; 0xbee <vfprintf+0x546>
     bea:	20 e1       	ldi	r18, 0x10	; 16
     bec:	32 e0       	ldi	r19, 0x02	; 2
     bee:	56 01       	movw	r10, r12
     bf0:	07 ff       	sbrs	r16, 7
     bf2:	09 c0       	rjmp	.+18     	; 0xc06 <vfprintf+0x55e>
     bf4:	84 e0       	ldi	r24, 0x04	; 4
     bf6:	a8 0e       	add	r10, r24
     bf8:	b1 1c       	adc	r11, r1
     bfa:	f6 01       	movw	r30, r12
     bfc:	60 81       	ld	r22, Z
     bfe:	71 81       	ldd	r23, Z+1	; 0x01
     c00:	82 81       	ldd	r24, Z+2	; 0x02
     c02:	93 81       	ldd	r25, Z+3	; 0x03
     c04:	08 c0       	rjmp	.+16     	; 0xc16 <vfprintf+0x56e>
     c06:	f2 e0       	ldi	r31, 0x02	; 2
     c08:	af 0e       	add	r10, r31
     c0a:	b1 1c       	adc	r11, r1
     c0c:	f6 01       	movw	r30, r12
     c0e:	60 81       	ld	r22, Z
     c10:	71 81       	ldd	r23, Z+1	; 0x01
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	a3 01       	movw	r20, r6
     c18:	28 d2       	rcall	.+1104   	; 0x106a <__ultoa_invert>
     c1a:	c8 2e       	mov	r12, r24
     c1c:	c6 18       	sub	r12, r6
     c1e:	0f 77       	andi	r16, 0x7F	; 127
     c20:	90 2e       	mov	r9, r16
     c22:	96 fe       	sbrs	r9, 6
     c24:	0b c0       	rjmp	.+22     	; 0xc3c <vfprintf+0x594>
     c26:	09 2d       	mov	r16, r9
     c28:	0e 7f       	andi	r16, 0xFE	; 254
     c2a:	c1 16       	cp	r12, r17
     c2c:	50 f4       	brcc	.+20     	; 0xc42 <vfprintf+0x59a>
     c2e:	94 fe       	sbrs	r9, 4
     c30:	0a c0       	rjmp	.+20     	; 0xc46 <vfprintf+0x59e>
     c32:	92 fc       	sbrc	r9, 2
     c34:	08 c0       	rjmp	.+16     	; 0xc46 <vfprintf+0x59e>
     c36:	09 2d       	mov	r16, r9
     c38:	0e 7e       	andi	r16, 0xEE	; 238
     c3a:	05 c0       	rjmp	.+10     	; 0xc46 <vfprintf+0x59e>
     c3c:	dc 2c       	mov	r13, r12
     c3e:	09 2d       	mov	r16, r9
     c40:	03 c0       	rjmp	.+6      	; 0xc48 <vfprintf+0x5a0>
     c42:	dc 2c       	mov	r13, r12
     c44:	01 c0       	rjmp	.+2      	; 0xc48 <vfprintf+0x5a0>
     c46:	d1 2e       	mov	r13, r17
     c48:	04 ff       	sbrs	r16, 4
     c4a:	0d c0       	rjmp	.+26     	; 0xc66 <vfprintf+0x5be>
     c4c:	fe 01       	movw	r30, r28
     c4e:	ec 0d       	add	r30, r12
     c50:	f1 1d       	adc	r31, r1
     c52:	80 81       	ld	r24, Z
     c54:	80 33       	cpi	r24, 0x30	; 48
     c56:	11 f4       	brne	.+4      	; 0xc5c <vfprintf+0x5b4>
     c58:	09 7e       	andi	r16, 0xE9	; 233
     c5a:	09 c0       	rjmp	.+18     	; 0xc6e <vfprintf+0x5c6>
     c5c:	02 ff       	sbrs	r16, 2
     c5e:	06 c0       	rjmp	.+12     	; 0xc6c <vfprintf+0x5c4>
     c60:	d3 94       	inc	r13
     c62:	d3 94       	inc	r13
     c64:	04 c0       	rjmp	.+8      	; 0xc6e <vfprintf+0x5c6>
     c66:	80 2f       	mov	r24, r16
     c68:	86 78       	andi	r24, 0x86	; 134
     c6a:	09 f0       	breq	.+2      	; 0xc6e <vfprintf+0x5c6>
     c6c:	d3 94       	inc	r13
     c6e:	03 fd       	sbrc	r16, 3
     c70:	10 c0       	rjmp	.+32     	; 0xc92 <vfprintf+0x5ea>
     c72:	00 ff       	sbrs	r16, 0
     c74:	06 c0       	rjmp	.+12     	; 0xc82 <vfprintf+0x5da>
     c76:	1c 2d       	mov	r17, r12
     c78:	d5 14       	cp	r13, r5
     c7a:	78 f4       	brcc	.+30     	; 0xc9a <vfprintf+0x5f2>
     c7c:	15 0d       	add	r17, r5
     c7e:	1d 19       	sub	r17, r13
     c80:	0c c0       	rjmp	.+24     	; 0xc9a <vfprintf+0x5f2>
     c82:	d5 14       	cp	r13, r5
     c84:	50 f4       	brcc	.+20     	; 0xc9a <vfprintf+0x5f2>
     c86:	b7 01       	movw	r22, r14
     c88:	80 e2       	ldi	r24, 0x20	; 32
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	84 d1       	rcall	.+776    	; 0xf96 <fputc>
     c8e:	d3 94       	inc	r13
     c90:	f8 cf       	rjmp	.-16     	; 0xc82 <vfprintf+0x5da>
     c92:	d5 14       	cp	r13, r5
     c94:	10 f4       	brcc	.+4      	; 0xc9a <vfprintf+0x5f2>
     c96:	5d 18       	sub	r5, r13
     c98:	01 c0       	rjmp	.+2      	; 0xc9c <vfprintf+0x5f4>
     c9a:	51 2c       	mov	r5, r1
     c9c:	04 ff       	sbrs	r16, 4
     c9e:	0f c0       	rjmp	.+30     	; 0xcbe <vfprintf+0x616>
     ca0:	b7 01       	movw	r22, r14
     ca2:	80 e3       	ldi	r24, 0x30	; 48
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	77 d1       	rcall	.+750    	; 0xf96 <fputc>
     ca8:	02 ff       	sbrs	r16, 2
     caa:	16 c0       	rjmp	.+44     	; 0xcd8 <vfprintf+0x630>
     cac:	01 fd       	sbrc	r16, 1
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x60e>
     cb0:	88 e7       	ldi	r24, 0x78	; 120
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x612>
     cb6:	88 e5       	ldi	r24, 0x58	; 88
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	b7 01       	movw	r22, r14
     cbc:	0c c0       	rjmp	.+24     	; 0xcd6 <vfprintf+0x62e>
     cbe:	80 2f       	mov	r24, r16
     cc0:	86 78       	andi	r24, 0x86	; 134
     cc2:	51 f0       	breq	.+20     	; 0xcd8 <vfprintf+0x630>
     cc4:	01 ff       	sbrs	r16, 1
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <vfprintf+0x624>
     cc8:	8b e2       	ldi	r24, 0x2B	; 43
     cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x626>
     ccc:	80 e2       	ldi	r24, 0x20	; 32
     cce:	07 fd       	sbrc	r16, 7
     cd0:	8d e2       	ldi	r24, 0x2D	; 45
     cd2:	b7 01       	movw	r22, r14
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	5f d1       	rcall	.+702    	; 0xf96 <fputc>
     cd8:	c1 16       	cp	r12, r17
     cda:	30 f4       	brcc	.+12     	; 0xce8 <vfprintf+0x640>
     cdc:	b7 01       	movw	r22, r14
     cde:	80 e3       	ldi	r24, 0x30	; 48
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	59 d1       	rcall	.+690    	; 0xf96 <fputc>
     ce4:	11 50       	subi	r17, 0x01	; 1
     ce6:	f8 cf       	rjmp	.-16     	; 0xcd8 <vfprintf+0x630>
     ce8:	ca 94       	dec	r12
     cea:	f3 01       	movw	r30, r6
     cec:	ec 0d       	add	r30, r12
     cee:	f1 1d       	adc	r31, r1
     cf0:	80 81       	ld	r24, Z
     cf2:	b7 01       	movw	r22, r14
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	4f d1       	rcall	.+670    	; 0xf96 <fputc>
     cf8:	c1 10       	cpse	r12, r1
     cfa:	f6 cf       	rjmp	.-20     	; 0xce8 <vfprintf+0x640>
     cfc:	15 c0       	rjmp	.+42     	; 0xd28 <vfprintf+0x680>
     cfe:	f4 e0       	ldi	r31, 0x04	; 4
     d00:	f5 15       	cp	r31, r5
     d02:	50 f5       	brcc	.+84     	; 0xd58 <vfprintf+0x6b0>
     d04:	84 e0       	ldi	r24, 0x04	; 4
     d06:	58 1a       	sub	r5, r24
     d08:	93 fe       	sbrs	r9, 3
     d0a:	1e c0       	rjmp	.+60     	; 0xd48 <vfprintf+0x6a0>
     d0c:	01 11       	cpse	r16, r1
     d0e:	25 c0       	rjmp	.+74     	; 0xd5a <vfprintf+0x6b2>
     d10:	2c 85       	ldd	r18, Y+12	; 0x0c
     d12:	23 ff       	sbrs	r18, 3
     d14:	27 c0       	rjmp	.+78     	; 0xd64 <vfprintf+0x6bc>
     d16:	04 ee       	ldi	r16, 0xE4	; 228
     d18:	10 e0       	ldi	r17, 0x00	; 0
     d1a:	39 2d       	mov	r19, r9
     d1c:	30 71       	andi	r19, 0x10	; 16
     d1e:	93 2e       	mov	r9, r19
     d20:	f8 01       	movw	r30, r16
     d22:	84 91       	lpm	r24, Z
     d24:	81 11       	cpse	r24, r1
     d26:	21 c0       	rjmp	.+66     	; 0xd6a <vfprintf+0x6c2>
     d28:	55 20       	and	r5, r5
     d2a:	09 f4       	brne	.+2      	; 0xd2e <vfprintf+0x686>
     d2c:	fc cc       	rjmp	.-1544   	; 0x726 <vfprintf+0x7e>
     d2e:	b7 01       	movw	r22, r14
     d30:	80 e2       	ldi	r24, 0x20	; 32
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	30 d1       	rcall	.+608    	; 0xf96 <fputc>
     d36:	5a 94       	dec	r5
     d38:	f7 cf       	rjmp	.-18     	; 0xd28 <vfprintf+0x680>
     d3a:	f7 01       	movw	r30, r14
     d3c:	86 81       	ldd	r24, Z+6	; 0x06
     d3e:	97 81       	ldd	r25, Z+7	; 0x07
     d40:	23 c0       	rjmp	.+70     	; 0xd88 <vfprintf+0x6e0>
     d42:	8f ef       	ldi	r24, 0xFF	; 255
     d44:	9f ef       	ldi	r25, 0xFF	; 255
     d46:	20 c0       	rjmp	.+64     	; 0xd88 <vfprintf+0x6e0>
     d48:	b7 01       	movw	r22, r14
     d4a:	80 e2       	ldi	r24, 0x20	; 32
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	23 d1       	rcall	.+582    	; 0xf96 <fputc>
     d50:	5a 94       	dec	r5
     d52:	51 10       	cpse	r5, r1
     d54:	f9 cf       	rjmp	.-14     	; 0xd48 <vfprintf+0x6a0>
     d56:	da cf       	rjmp	.-76     	; 0xd0c <vfprintf+0x664>
     d58:	51 2c       	mov	r5, r1
     d5a:	b7 01       	movw	r22, r14
     d5c:	80 2f       	mov	r24, r16
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	1a d1       	rcall	.+564    	; 0xf96 <fputc>
     d62:	d6 cf       	rjmp	.-84     	; 0xd10 <vfprintf+0x668>
     d64:	08 ee       	ldi	r16, 0xE8	; 232
     d66:	10 e0       	ldi	r17, 0x00	; 0
     d68:	d8 cf       	rjmp	.-80     	; 0xd1a <vfprintf+0x672>
     d6a:	91 10       	cpse	r9, r1
     d6c:	80 52       	subi	r24, 0x20	; 32
     d6e:	b7 01       	movw	r22, r14
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	11 d1       	rcall	.+546    	; 0xf96 <fputc>
     d74:	0f 5f       	subi	r16, 0xFF	; 255
     d76:	1f 4f       	sbci	r17, 0xFF	; 255
     d78:	d3 cf       	rjmp	.-90     	; 0xd20 <vfprintf+0x678>
     d7a:	23 e0       	ldi	r18, 0x03	; 3
     d7c:	25 15       	cp	r18, r5
     d7e:	10 f4       	brcc	.+4      	; 0xd84 <vfprintf+0x6dc>
     d80:	83 e0       	ldi	r24, 0x03	; 3
     d82:	c1 cf       	rjmp	.-126    	; 0xd06 <vfprintf+0x65e>
     d84:	51 2c       	mov	r5, r1
     d86:	c4 cf       	rjmp	.-120    	; 0xd10 <vfprintf+0x668>
     d88:	60 96       	adiw	r28, 0x10	; 16
     d8a:	0f b6       	in	r0, 0x3f	; 63
     d8c:	f8 94       	cli
     d8e:	de bf       	out	0x3e, r29	; 62
     d90:	0f be       	out	0x3f, r0	; 63
     d92:	cd bf       	out	0x3d, r28	; 61
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	ef 90       	pop	r14
     da0:	df 90       	pop	r13
     da2:	cf 90       	pop	r12
     da4:	bf 90       	pop	r11
     da6:	af 90       	pop	r10
     da8:	9f 90       	pop	r9
     daa:	8f 90       	pop	r8
     dac:	7f 90       	pop	r7
     dae:	6f 90       	pop	r6
     db0:	5f 90       	pop	r5
     db2:	4f 90       	pop	r4
     db4:	3f 90       	pop	r3
     db6:	2f 90       	pop	r2
     db8:	08 95       	ret

00000dba <__ftoa_engine>:
     dba:	28 30       	cpi	r18, 0x08	; 8
     dbc:	08 f0       	brcs	.+2      	; 0xdc0 <__ftoa_engine+0x6>
     dbe:	27 e0       	ldi	r18, 0x07	; 7
     dc0:	33 27       	eor	r19, r19
     dc2:	da 01       	movw	r26, r20
     dc4:	99 0f       	add	r25, r25
     dc6:	31 1d       	adc	r19, r1
     dc8:	87 fd       	sbrc	r24, 7
     dca:	91 60       	ori	r25, 0x01	; 1
     dcc:	00 96       	adiw	r24, 0x00	; 0
     dce:	61 05       	cpc	r22, r1
     dd0:	71 05       	cpc	r23, r1
     dd2:	39 f4       	brne	.+14     	; 0xde2 <__ftoa_engine+0x28>
     dd4:	32 60       	ori	r19, 0x02	; 2
     dd6:	2e 5f       	subi	r18, 0xFE	; 254
     dd8:	3d 93       	st	X+, r19
     dda:	30 e3       	ldi	r19, 0x30	; 48
     ddc:	2a 95       	dec	r18
     dde:	e1 f7       	brne	.-8      	; 0xdd8 <__ftoa_engine+0x1e>
     de0:	08 95       	ret
     de2:	9f 3f       	cpi	r25, 0xFF	; 255
     de4:	30 f0       	brcs	.+12     	; 0xdf2 <__ftoa_engine+0x38>
     de6:	80 38       	cpi	r24, 0x80	; 128
     de8:	71 05       	cpc	r23, r1
     dea:	61 05       	cpc	r22, r1
     dec:	09 f0       	breq	.+2      	; 0xdf0 <__ftoa_engine+0x36>
     dee:	3c 5f       	subi	r19, 0xFC	; 252
     df0:	3c 5f       	subi	r19, 0xFC	; 252
     df2:	3d 93       	st	X+, r19
     df4:	91 30       	cpi	r25, 0x01	; 1
     df6:	08 f0       	brcs	.+2      	; 0xdfa <__ftoa_engine+0x40>
     df8:	80 68       	ori	r24, 0x80	; 128
     dfa:	91 1d       	adc	r25, r1
     dfc:	df 93       	push	r29
     dfe:	cf 93       	push	r28
     e00:	1f 93       	push	r17
     e02:	0f 93       	push	r16
     e04:	ff 92       	push	r15
     e06:	ef 92       	push	r14
     e08:	19 2f       	mov	r17, r25
     e0a:	98 7f       	andi	r25, 0xF8	; 248
     e0c:	96 95       	lsr	r25
     e0e:	e9 2f       	mov	r30, r25
     e10:	96 95       	lsr	r25
     e12:	96 95       	lsr	r25
     e14:	e9 0f       	add	r30, r25
     e16:	ff 27       	eor	r31, r31
     e18:	ea 5b       	subi	r30, 0xBA	; 186
     e1a:	fe 4f       	sbci	r31, 0xFE	; 254
     e1c:	99 27       	eor	r25, r25
     e1e:	33 27       	eor	r19, r19
     e20:	ee 24       	eor	r14, r14
     e22:	ff 24       	eor	r15, r15
     e24:	a7 01       	movw	r20, r14
     e26:	e7 01       	movw	r28, r14
     e28:	05 90       	lpm	r0, Z+
     e2a:	08 94       	sec
     e2c:	07 94       	ror	r0
     e2e:	28 f4       	brcc	.+10     	; 0xe3a <__ftoa_engine+0x80>
     e30:	36 0f       	add	r19, r22
     e32:	e7 1e       	adc	r14, r23
     e34:	f8 1e       	adc	r15, r24
     e36:	49 1f       	adc	r20, r25
     e38:	51 1d       	adc	r21, r1
     e3a:	66 0f       	add	r22, r22
     e3c:	77 1f       	adc	r23, r23
     e3e:	88 1f       	adc	r24, r24
     e40:	99 1f       	adc	r25, r25
     e42:	06 94       	lsr	r0
     e44:	a1 f7       	brne	.-24     	; 0xe2e <__ftoa_engine+0x74>
     e46:	05 90       	lpm	r0, Z+
     e48:	07 94       	ror	r0
     e4a:	28 f4       	brcc	.+10     	; 0xe56 <__ftoa_engine+0x9c>
     e4c:	e7 0e       	add	r14, r23
     e4e:	f8 1e       	adc	r15, r24
     e50:	49 1f       	adc	r20, r25
     e52:	56 1f       	adc	r21, r22
     e54:	c1 1d       	adc	r28, r1
     e56:	77 0f       	add	r23, r23
     e58:	88 1f       	adc	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	66 1f       	adc	r22, r22
     e5e:	06 94       	lsr	r0
     e60:	a1 f7       	brne	.-24     	; 0xe4a <__ftoa_engine+0x90>
     e62:	05 90       	lpm	r0, Z+
     e64:	07 94       	ror	r0
     e66:	28 f4       	brcc	.+10     	; 0xe72 <__ftoa_engine+0xb8>
     e68:	f8 0e       	add	r15, r24
     e6a:	49 1f       	adc	r20, r25
     e6c:	56 1f       	adc	r21, r22
     e6e:	c7 1f       	adc	r28, r23
     e70:	d1 1d       	adc	r29, r1
     e72:	88 0f       	add	r24, r24
     e74:	99 1f       	adc	r25, r25
     e76:	66 1f       	adc	r22, r22
     e78:	77 1f       	adc	r23, r23
     e7a:	06 94       	lsr	r0
     e7c:	a1 f7       	brne	.-24     	; 0xe66 <__ftoa_engine+0xac>
     e7e:	05 90       	lpm	r0, Z+
     e80:	07 94       	ror	r0
     e82:	20 f4       	brcc	.+8      	; 0xe8c <__ftoa_engine+0xd2>
     e84:	49 0f       	add	r20, r25
     e86:	56 1f       	adc	r21, r22
     e88:	c7 1f       	adc	r28, r23
     e8a:	d8 1f       	adc	r29, r24
     e8c:	99 0f       	add	r25, r25
     e8e:	66 1f       	adc	r22, r22
     e90:	77 1f       	adc	r23, r23
     e92:	88 1f       	adc	r24, r24
     e94:	06 94       	lsr	r0
     e96:	a9 f7       	brne	.-22     	; 0xe82 <__ftoa_engine+0xc8>
     e98:	84 91       	lpm	r24, Z
     e9a:	10 95       	com	r17
     e9c:	17 70       	andi	r17, 0x07	; 7
     e9e:	41 f0       	breq	.+16     	; 0xeb0 <__ftoa_engine+0xf6>
     ea0:	d6 95       	lsr	r29
     ea2:	c7 95       	ror	r28
     ea4:	57 95       	ror	r21
     ea6:	47 95       	ror	r20
     ea8:	f7 94       	ror	r15
     eaa:	e7 94       	ror	r14
     eac:	1a 95       	dec	r17
     eae:	c1 f7       	brne	.-16     	; 0xea0 <__ftoa_engine+0xe6>
     eb0:	ec ee       	ldi	r30, 0xEC	; 236
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	68 94       	set
     eb6:	15 90       	lpm	r1, Z+
     eb8:	15 91       	lpm	r17, Z+
     eba:	35 91       	lpm	r19, Z+
     ebc:	65 91       	lpm	r22, Z+
     ebe:	95 91       	lpm	r25, Z+
     ec0:	05 90       	lpm	r0, Z+
     ec2:	7f e2       	ldi	r23, 0x2F	; 47
     ec4:	73 95       	inc	r23
     ec6:	e1 18       	sub	r14, r1
     ec8:	f1 0a       	sbc	r15, r17
     eca:	43 0b       	sbc	r20, r19
     ecc:	56 0b       	sbc	r21, r22
     ece:	c9 0b       	sbc	r28, r25
     ed0:	d0 09       	sbc	r29, r0
     ed2:	c0 f7       	brcc	.-16     	; 0xec4 <__ftoa_engine+0x10a>
     ed4:	e1 0c       	add	r14, r1
     ed6:	f1 1e       	adc	r15, r17
     ed8:	43 1f       	adc	r20, r19
     eda:	56 1f       	adc	r21, r22
     edc:	c9 1f       	adc	r28, r25
     ede:	d0 1d       	adc	r29, r0
     ee0:	7e f4       	brtc	.+30     	; 0xf00 <__ftoa_engine+0x146>
     ee2:	70 33       	cpi	r23, 0x30	; 48
     ee4:	11 f4       	brne	.+4      	; 0xeea <__ftoa_engine+0x130>
     ee6:	8a 95       	dec	r24
     ee8:	e6 cf       	rjmp	.-52     	; 0xeb6 <__ftoa_engine+0xfc>
     eea:	e8 94       	clt
     eec:	01 50       	subi	r16, 0x01	; 1
     eee:	30 f0       	brcs	.+12     	; 0xefc <__ftoa_engine+0x142>
     ef0:	08 0f       	add	r16, r24
     ef2:	0a f4       	brpl	.+2      	; 0xef6 <__ftoa_engine+0x13c>
     ef4:	00 27       	eor	r16, r16
     ef6:	02 17       	cp	r16, r18
     ef8:	08 f4       	brcc	.+2      	; 0xefc <__ftoa_engine+0x142>
     efa:	20 2f       	mov	r18, r16
     efc:	23 95       	inc	r18
     efe:	02 2f       	mov	r16, r18
     f00:	7a 33       	cpi	r23, 0x3A	; 58
     f02:	28 f0       	brcs	.+10     	; 0xf0e <__ftoa_engine+0x154>
     f04:	79 e3       	ldi	r23, 0x39	; 57
     f06:	7d 93       	st	X+, r23
     f08:	2a 95       	dec	r18
     f0a:	e9 f7       	brne	.-6      	; 0xf06 <__ftoa_engine+0x14c>
     f0c:	10 c0       	rjmp	.+32     	; 0xf2e <__ftoa_engine+0x174>
     f0e:	7d 93       	st	X+, r23
     f10:	2a 95       	dec	r18
     f12:	89 f6       	brne	.-94     	; 0xeb6 <__ftoa_engine+0xfc>
     f14:	06 94       	lsr	r0
     f16:	97 95       	ror	r25
     f18:	67 95       	ror	r22
     f1a:	37 95       	ror	r19
     f1c:	17 95       	ror	r17
     f1e:	17 94       	ror	r1
     f20:	e1 18       	sub	r14, r1
     f22:	f1 0a       	sbc	r15, r17
     f24:	43 0b       	sbc	r20, r19
     f26:	56 0b       	sbc	r21, r22
     f28:	c9 0b       	sbc	r28, r25
     f2a:	d0 09       	sbc	r29, r0
     f2c:	98 f0       	brcs	.+38     	; 0xf54 <__ftoa_engine+0x19a>
     f2e:	23 95       	inc	r18
     f30:	7e 91       	ld	r23, -X
     f32:	73 95       	inc	r23
     f34:	7a 33       	cpi	r23, 0x3A	; 58
     f36:	08 f0       	brcs	.+2      	; 0xf3a <__ftoa_engine+0x180>
     f38:	70 e3       	ldi	r23, 0x30	; 48
     f3a:	7c 93       	st	X, r23
     f3c:	20 13       	cpse	r18, r16
     f3e:	b8 f7       	brcc	.-18     	; 0xf2e <__ftoa_engine+0x174>
     f40:	7e 91       	ld	r23, -X
     f42:	70 61       	ori	r23, 0x10	; 16
     f44:	7d 93       	st	X+, r23
     f46:	30 f0       	brcs	.+12     	; 0xf54 <__ftoa_engine+0x19a>
     f48:	83 95       	inc	r24
     f4a:	71 e3       	ldi	r23, 0x31	; 49
     f4c:	7d 93       	st	X+, r23
     f4e:	70 e3       	ldi	r23, 0x30	; 48
     f50:	2a 95       	dec	r18
     f52:	e1 f7       	brne	.-8      	; 0xf4c <__ftoa_engine+0x192>
     f54:	11 24       	eor	r1, r1
     f56:	ef 90       	pop	r14
     f58:	ff 90       	pop	r15
     f5a:	0f 91       	pop	r16
     f5c:	1f 91       	pop	r17
     f5e:	cf 91       	pop	r28
     f60:	df 91       	pop	r29
     f62:	99 27       	eor	r25, r25
     f64:	87 fd       	sbrc	r24, 7
     f66:	90 95       	com	r25
     f68:	08 95       	ret

00000f6a <strnlen_P>:
     f6a:	fc 01       	movw	r30, r24
     f6c:	05 90       	lpm	r0, Z+
     f6e:	61 50       	subi	r22, 0x01	; 1
     f70:	70 40       	sbci	r23, 0x00	; 0
     f72:	01 10       	cpse	r0, r1
     f74:	d8 f7       	brcc	.-10     	; 0xf6c <strnlen_P+0x2>
     f76:	80 95       	com	r24
     f78:	90 95       	com	r25
     f7a:	8e 0f       	add	r24, r30
     f7c:	9f 1f       	adc	r25, r31
     f7e:	08 95       	ret

00000f80 <strnlen>:
     f80:	fc 01       	movw	r30, r24
     f82:	61 50       	subi	r22, 0x01	; 1
     f84:	70 40       	sbci	r23, 0x00	; 0
     f86:	01 90       	ld	r0, Z+
     f88:	01 10       	cpse	r0, r1
     f8a:	d8 f7       	brcc	.-10     	; 0xf82 <strnlen+0x2>
     f8c:	80 95       	com	r24
     f8e:	90 95       	com	r25
     f90:	8e 0f       	add	r24, r30
     f92:	9f 1f       	adc	r25, r31
     f94:	08 95       	ret

00000f96 <fputc>:
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	fb 01       	movw	r30, r22
     fa0:	23 81       	ldd	r18, Z+3	; 0x03
     fa2:	21 fd       	sbrc	r18, 1
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <fputc+0x16>
     fa6:	8f ef       	ldi	r24, 0xFF	; 255
     fa8:	9f ef       	ldi	r25, 0xFF	; 255
     faa:	2c c0       	rjmp	.+88     	; 0x1004 <fputc+0x6e>
     fac:	22 ff       	sbrs	r18, 2
     fae:	16 c0       	rjmp	.+44     	; 0xfdc <fputc+0x46>
     fb0:	46 81       	ldd	r20, Z+6	; 0x06
     fb2:	57 81       	ldd	r21, Z+7	; 0x07
     fb4:	24 81       	ldd	r18, Z+4	; 0x04
     fb6:	35 81       	ldd	r19, Z+5	; 0x05
     fb8:	42 17       	cp	r20, r18
     fba:	53 07       	cpc	r21, r19
     fbc:	44 f4       	brge	.+16     	; 0xfce <fputc+0x38>
     fbe:	a0 81       	ld	r26, Z
     fc0:	b1 81       	ldd	r27, Z+1	; 0x01
     fc2:	9d 01       	movw	r18, r26
     fc4:	2f 5f       	subi	r18, 0xFF	; 255
     fc6:	3f 4f       	sbci	r19, 0xFF	; 255
     fc8:	31 83       	std	Z+1, r19	; 0x01
     fca:	20 83       	st	Z, r18
     fcc:	8c 93       	st	X, r24
     fce:	26 81       	ldd	r18, Z+6	; 0x06
     fd0:	37 81       	ldd	r19, Z+7	; 0x07
     fd2:	2f 5f       	subi	r18, 0xFF	; 255
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	37 83       	std	Z+7, r19	; 0x07
     fd8:	26 83       	std	Z+6, r18	; 0x06
     fda:	14 c0       	rjmp	.+40     	; 0x1004 <fputc+0x6e>
     fdc:	8b 01       	movw	r16, r22
     fde:	ec 01       	movw	r28, r24
     fe0:	fb 01       	movw	r30, r22
     fe2:	00 84       	ldd	r0, Z+8	; 0x08
     fe4:	f1 85       	ldd	r31, Z+9	; 0x09
     fe6:	e0 2d       	mov	r30, r0
     fe8:	19 95       	eicall
     fea:	89 2b       	or	r24, r25
     fec:	e1 f6       	brne	.-72     	; 0xfa6 <fputc+0x10>
     fee:	d8 01       	movw	r26, r16
     ff0:	16 96       	adiw	r26, 0x06	; 6
     ff2:	8d 91       	ld	r24, X+
     ff4:	9c 91       	ld	r25, X
     ff6:	17 97       	sbiw	r26, 0x07	; 7
     ff8:	01 96       	adiw	r24, 0x01	; 1
     ffa:	17 96       	adiw	r26, 0x07	; 7
     ffc:	9c 93       	st	X, r25
     ffe:	8e 93       	st	-X, r24
    1000:	16 97       	sbiw	r26, 0x06	; 6
    1002:	ce 01       	movw	r24, r28
    1004:	df 91       	pop	r29
    1006:	cf 91       	pop	r28
    1008:	1f 91       	pop	r17
    100a:	0f 91       	pop	r16
    100c:	08 95       	ret

0000100e <sprintf>:
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	cd b7       	in	r28, 0x3d	; 61
    1018:	de b7       	in	r29, 0x3e	; 62
    101a:	2e 97       	sbiw	r28, 0x0e	; 14
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	de bf       	out	0x3e, r29	; 62
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	cd bf       	out	0x3d, r28	; 61
    1026:	0e 89       	ldd	r16, Y+22	; 0x16
    1028:	1f 89       	ldd	r17, Y+23	; 0x17
    102a:	86 e0       	ldi	r24, 0x06	; 6
    102c:	8c 83       	std	Y+4, r24	; 0x04
    102e:	1a 83       	std	Y+2, r17	; 0x02
    1030:	09 83       	std	Y+1, r16	; 0x01
    1032:	8f ef       	ldi	r24, 0xFF	; 255
    1034:	9f e7       	ldi	r25, 0x7F	; 127
    1036:	9e 83       	std	Y+6, r25	; 0x06
    1038:	8d 83       	std	Y+5, r24	; 0x05
    103a:	ae 01       	movw	r20, r28
    103c:	46 5e       	subi	r20, 0xE6	; 230
    103e:	5f 4f       	sbci	r21, 0xFF	; 255
    1040:	68 8d       	ldd	r22, Y+24	; 0x18
    1042:	79 8d       	ldd	r23, Y+25	; 0x19
    1044:	ce 01       	movw	r24, r28
    1046:	01 96       	adiw	r24, 0x01	; 1
    1048:	2f db       	rcall	.-2466   	; 0x6a8 <vfprintf>
    104a:	ef 81       	ldd	r30, Y+7	; 0x07
    104c:	f8 85       	ldd	r31, Y+8	; 0x08
    104e:	e0 0f       	add	r30, r16
    1050:	f1 1f       	adc	r31, r17
    1052:	10 82       	st	Z, r1
    1054:	2e 96       	adiw	r28, 0x0e	; 14
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	f8 94       	cli
    105a:	de bf       	out	0x3e, r29	; 62
    105c:	0f be       	out	0x3f, r0	; 63
    105e:	cd bf       	out	0x3d, r28	; 61
    1060:	df 91       	pop	r29
    1062:	cf 91       	pop	r28
    1064:	1f 91       	pop	r17
    1066:	0f 91       	pop	r16
    1068:	08 95       	ret

0000106a <__ultoa_invert>:
    106a:	fa 01       	movw	r30, r20
    106c:	aa 27       	eor	r26, r26
    106e:	28 30       	cpi	r18, 0x08	; 8
    1070:	51 f1       	breq	.+84     	; 0x10c6 <__ultoa_invert+0x5c>
    1072:	20 31       	cpi	r18, 0x10	; 16
    1074:	81 f1       	breq	.+96     	; 0x10d6 <__ultoa_invert+0x6c>
    1076:	e8 94       	clt
    1078:	6f 93       	push	r22
    107a:	6e 7f       	andi	r22, 0xFE	; 254
    107c:	6e 5f       	subi	r22, 0xFE	; 254
    107e:	7f 4f       	sbci	r23, 0xFF	; 255
    1080:	8f 4f       	sbci	r24, 0xFF	; 255
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	af 4f       	sbci	r26, 0xFF	; 255
    1086:	b1 e0       	ldi	r27, 0x01	; 1
    1088:	3e d0       	rcall	.+124    	; 0x1106 <__ultoa_invert+0x9c>
    108a:	b4 e0       	ldi	r27, 0x04	; 4
    108c:	3c d0       	rcall	.+120    	; 0x1106 <__ultoa_invert+0x9c>
    108e:	67 0f       	add	r22, r23
    1090:	78 1f       	adc	r23, r24
    1092:	89 1f       	adc	r24, r25
    1094:	9a 1f       	adc	r25, r26
    1096:	a1 1d       	adc	r26, r1
    1098:	68 0f       	add	r22, r24
    109a:	79 1f       	adc	r23, r25
    109c:	8a 1f       	adc	r24, r26
    109e:	91 1d       	adc	r25, r1
    10a0:	a1 1d       	adc	r26, r1
    10a2:	6a 0f       	add	r22, r26
    10a4:	71 1d       	adc	r23, r1
    10a6:	81 1d       	adc	r24, r1
    10a8:	91 1d       	adc	r25, r1
    10aa:	a1 1d       	adc	r26, r1
    10ac:	20 d0       	rcall	.+64     	; 0x10ee <__ultoa_invert+0x84>
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <__ultoa_invert+0x48>
    10b0:	68 94       	set
    10b2:	3f 91       	pop	r19
    10b4:	2a e0       	ldi	r18, 0x0A	; 10
    10b6:	26 9f       	mul	r18, r22
    10b8:	11 24       	eor	r1, r1
    10ba:	30 19       	sub	r19, r0
    10bc:	30 5d       	subi	r19, 0xD0	; 208
    10be:	31 93       	st	Z+, r19
    10c0:	de f6       	brtc	.-74     	; 0x1078 <__ultoa_invert+0xe>
    10c2:	cf 01       	movw	r24, r30
    10c4:	08 95       	ret
    10c6:	46 2f       	mov	r20, r22
    10c8:	47 70       	andi	r20, 0x07	; 7
    10ca:	40 5d       	subi	r20, 0xD0	; 208
    10cc:	41 93       	st	Z+, r20
    10ce:	b3 e0       	ldi	r27, 0x03	; 3
    10d0:	0f d0       	rcall	.+30     	; 0x10f0 <__ultoa_invert+0x86>
    10d2:	c9 f7       	brne	.-14     	; 0x10c6 <__ultoa_invert+0x5c>
    10d4:	f6 cf       	rjmp	.-20     	; 0x10c2 <__ultoa_invert+0x58>
    10d6:	46 2f       	mov	r20, r22
    10d8:	4f 70       	andi	r20, 0x0F	; 15
    10da:	40 5d       	subi	r20, 0xD0	; 208
    10dc:	4a 33       	cpi	r20, 0x3A	; 58
    10de:	18 f0       	brcs	.+6      	; 0x10e6 <__ultoa_invert+0x7c>
    10e0:	49 5d       	subi	r20, 0xD9	; 217
    10e2:	31 fd       	sbrc	r19, 1
    10e4:	40 52       	subi	r20, 0x20	; 32
    10e6:	41 93       	st	Z+, r20
    10e8:	02 d0       	rcall	.+4      	; 0x10ee <__ultoa_invert+0x84>
    10ea:	a9 f7       	brne	.-22     	; 0x10d6 <__ultoa_invert+0x6c>
    10ec:	ea cf       	rjmp	.-44     	; 0x10c2 <__ultoa_invert+0x58>
    10ee:	b4 e0       	ldi	r27, 0x04	; 4
    10f0:	a6 95       	lsr	r26
    10f2:	97 95       	ror	r25
    10f4:	87 95       	ror	r24
    10f6:	77 95       	ror	r23
    10f8:	67 95       	ror	r22
    10fa:	ba 95       	dec	r27
    10fc:	c9 f7       	brne	.-14     	; 0x10f0 <__ultoa_invert+0x86>
    10fe:	00 97       	sbiw	r24, 0x00	; 0
    1100:	61 05       	cpc	r22, r1
    1102:	71 05       	cpc	r23, r1
    1104:	08 95       	ret
    1106:	9b 01       	movw	r18, r22
    1108:	ac 01       	movw	r20, r24
    110a:	0a 2e       	mov	r0, r26
    110c:	06 94       	lsr	r0
    110e:	57 95       	ror	r21
    1110:	47 95       	ror	r20
    1112:	37 95       	ror	r19
    1114:	27 95       	ror	r18
    1116:	ba 95       	dec	r27
    1118:	c9 f7       	brne	.-14     	; 0x110c <__ultoa_invert+0xa2>
    111a:	62 0f       	add	r22, r18
    111c:	73 1f       	adc	r23, r19
    111e:	84 1f       	adc	r24, r20
    1120:	95 1f       	adc	r25, r21
    1122:	a0 1d       	adc	r26, r0
    1124:	08 95       	ret

00001126 <_exit>:
    1126:	f8 94       	cli

00001128 <__stop_program>:
    1128:	ff cf       	rjmp	.-2      	; 0x1128 <__stop_program>
